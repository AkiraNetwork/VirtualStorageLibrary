### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  id: VirtualStorageSettings
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  langs:
  - csharp
  - vb
  name: VirtualStorageSettings
  nameWithType: VirtualStorageSettings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  type: Class
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VirtualStorageSettings
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 22
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Manages settings for the virtual storage. This class implements the singleton pattern

    and holds default settings and various parameters.
  example: []
  syntax:
    content: public class VirtualStorageSettings
    content.vb: Public Class VirtualStorageSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  id: Settings
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: VirtualStorageSettings.Settings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Settings
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 33
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the current instance of the settings.
  example: []
  syntax:
    content: public static VirtualStorageSettings Settings { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
      description: The current instance of <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared ReadOnly Property Settings As VirtualStorageSettings
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  id: Initialize
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: VirtualStorageSettings.Initialize()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Initialize
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 60
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Initializes the settings. Existing settings are reset, and default settings

    are applied.
  example: []
  syntax:
    content: public static void Initialize()
    content.vb: Public Shared Sub Initialize()
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  id: PathSeparator
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PathSeparator
  nameWithType: VirtualStorageSettings.PathSeparator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PathSeparator
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 74
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets the path separator character. The default value is '/'.
  example: []
  syntax:
    content: public char PathSeparator { get; set; }
    parameters: []
    return:
      type: System.Char
      description: The character used to separate path segments.
    content.vb: Public Property PathSeparator As Char
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  id: PathRoot
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PathRoot
  nameWithType: VirtualStorageSettings.PathRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PathRoot
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 82
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets the root path. The default value is "/".
  example: []
  syntax:
    content: public string PathRoot { get; set; }
    parameters: []
    return:
      type: System.String
      description: The root directory path in the virtual storage.
    content.vb: Public Property PathRoot As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  id: PathDot
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PathDot
  nameWithType: VirtualStorageSettings.PathDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PathDot
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 91
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets or sets the path representing the current directory. The default value

    is ".".
  example: []
  syntax:
    content: public string PathDot { get; set; }
    parameters: []
    return:
      type: System.String
      description: The representation of the current directory.
    content.vb: Public Property PathDot As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  id: PathDotDot
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PathDotDot
  nameWithType: VirtualStorageSettings.PathDotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PathDotDot
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 100
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets or sets the path representing the parent directory. The default value

    is "..".
  example: []
  syntax:
    content: public string PathDotDot { get; set; }
    parameters: []
    return:
      type: System.String
      description: The representation of the parent directory.
    content.vb: Public Property PathDotDot As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  id: InvalidNodeNameCharacters
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: InvalidNodeNameCharacters
  nameWithType: VirtualStorageSettings.InvalidNodeNameCharacters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: InvalidNodeNameCharacters
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 108
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets an array of characters that are invalid in node names.
  example: []
  syntax:
    content: public HashSet<char> InvalidNodeNameCharacters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Char}
      description: An array of characters that cannot be used in node names.
    content.vb: Public Property InvalidNodeNameCharacters As HashSet(Of Char)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  id: InvalidNodeNames
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: InvalidNodeNames
  nameWithType: VirtualStorageSettings.InvalidNodeNames
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: InvalidNodeNames
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 116
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets an array of invalid node names.
  example: []
  syntax:
    content: public HashSet<string> InvalidNodeNames { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
      description: An array of node names that are not allowed in the virtual storage.
    content.vb: Public Property InvalidNodeNames As HashSet(Of String)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  id: WildcardMatcher
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: WildcardMatcher
  nameWithType: VirtualStorageSettings.WildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: WildcardMatcher
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 124
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets the wildcard matcher.
  example: []
  syntax:
    content: public IVirtualWildcardMatcher? WildcardMatcher { get; set; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
      description: The implementation of wildcard matching used in the storage.
    content.vb: Public Property WildcardMatcher As IVirtualWildcardMatcher
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  id: NodeListConditions
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: NodeListConditions
  nameWithType: VirtualStorageSettings.NodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: NodeListConditions
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 132
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets the conditions for listing nodes.
  example: []
  syntax:
    content: public VirtualNodeListConditions NodeListConditions { get; set; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
      description: The conditions used to filter, group, and sort nodes.
    content.vb: Public Property NodeListConditions As VirtualNodeListConditions
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  id: PrefixItem
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PrefixItem
  nameWithType: VirtualStorageSettings.PrefixItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PrefixItem
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 141
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets or sets the prefix used for item names. The default value is "item".

    Used for auto-generating node names.
  example: []
  syntax:
    content: public string PrefixItem { get; set; }
    parameters: []
    return:
      type: System.String
      description: The prefix added to auto-generated item names.
    content.vb: Public Property PrefixItem As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  id: PrefixDirectory
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PrefixDirectory
  nameWithType: VirtualStorageSettings.PrefixDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PrefixDirectory
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 150
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets or sets the prefix used for directory names. The default value is "dir".

    Used for auto-generating node names.
  example: []
  syntax:
    content: public string PrefixDirectory { get; set; }
    parameters: []
    return:
      type: System.String
      description: The prefix added to auto-generated directory names.
    content.vb: Public Property PrefixDirectory As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  id: PrefixSymbolicLink
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  langs:
  - csharp
  - vb
  name: PrefixSymbolicLink
  nameWithType: VirtualStorageSettings.PrefixSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PrefixSymbolicLink
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualStorageSettings.cs
    startLine: 159
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets or sets the prefix used for symbolic link names. The default value is

    "link". Used for auto-generating node names.
  example: []
  syntax:
    content: public string PrefixSymbolicLink { get; set; }
    parameters: []
    return:
      type: System.String
      description: The prefix added to auto-generated symbolic link names.
    content.vb: Public Property PrefixSymbolicLink As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink*
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<VirtualStorageSettings>(VirtualStorageSettings)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<VirtualStorageSettings>(VirtualStorageSettings)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings>(AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of VirtualStorageSettings)(VirtualStorageSettings)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings)(AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings)
  name.vb: GenerateSingleTableDebugText(Of VirtualStorageSettings)(VirtualStorageSettings)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
    name: VirtualStorageSettings
    href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
    name: VirtualStorageSettings
    href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
    name: VirtualStorageSettings
    href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
    name: VirtualStorageSettings
    href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  name: VirtualStorageSettings
  nameWithType: VirtualStorageSettings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Settings
  name: Settings
  nameWithType: VirtualStorageSettings.Settings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Initialize
  name: Initialize
  nameWithType: VirtualStorageSettings.Initialize
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathSeparator
  name: PathSeparator
  nameWithType: VirtualStorageSettings.PathSeparator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathRoot
  name: PathRoot
  nameWithType: VirtualStorageSettings.PathRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDot
  name: PathDot
  nameWithType: VirtualStorageSettings.PathDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDotDot
  name: PathDotDot
  nameWithType: VirtualStorageSettings.PathDotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNameCharacters
  name: InvalidNodeNameCharacters
  nameWithType: VirtualStorageSettings.InvalidNodeNameCharacters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
- uid: System.Collections.Generic.HashSet{System.Char}
  commentId: T:System.Collections.Generic.HashSet{System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<char>
  nameWithType: HashSet<char>
  fullName: System.Collections.Generic.HashSet<char>
  nameWithType.vb: HashSet(Of Char)
  fullName.vb: System.Collections.Generic.HashSet(Of Char)
  name.vb: HashSet(Of Char)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNames
  name: InvalidNodeNames
  nameWithType: VirtualStorageSettings.InvalidNodeNames
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_WildcardMatcher
  name: WildcardMatcher
  nameWithType: VirtualStorageSettings.WildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  name: IVirtualWildcardMatcher
  nameWithType: IVirtualWildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_NodeListConditions
  name: NodeListConditions
  nameWithType: VirtualStorageSettings.NodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html
  name: VirtualNodeListConditions
  nameWithType: VirtualNodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixItem
  name: PrefixItem
  nameWithType: VirtualStorageSettings.PrefixItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixDirectory
  name: PrefixDirectory
  nameWithType: VirtualStorageSettings.PrefixDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  href: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixSymbolicLink
  name: PrefixSymbolicLink
  nameWithType: VirtualStorageSettings.PrefixSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
