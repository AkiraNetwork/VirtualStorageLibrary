### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  id: VirtualNodeName
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor(System.String)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(System.Object)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(System.Object)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  langs:
  - csharp
  - vb
  name: VirtualNodeName
  nameWithType: VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  type: Class
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VirtualNodeName
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 5
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: 'public class VirtualNodeName : IEquatable<VirtualNodeName>, IComparable<VirtualNodeName>, IComparable'
    content.vb: Public Class VirtualNodeName Implements IEquatable(Of VirtualNodeName), IComparable(Of VirtualNodeName), IComparable
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  - System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor(System.String)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: VirtualNodeName(string)
  nameWithType: VirtualNodeName.VirtualNodeName(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.VirtualNodeName(string)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 5
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public VirtualNodeName(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor*
  nameWithType.vb: VirtualNodeName.New(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.New(String)
  name.vb: New(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  id: Name
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VirtualNodeName.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Name
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 12
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  id: ToString
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VirtualNodeName.ToString()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ToString
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 20
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  id: IsRoot
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: IsRoot
  nameWithType: VirtualNodeName.IsRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: IsRoot
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 22
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public bool IsRoot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRoot As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  id: GenerateNodeName(System.String)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: GenerateNodeName(string)
  nameWithType: VirtualNodeName.GenerateNodeName(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(string)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: GenerateNodeName
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 31
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static VirtualNodeName GenerateNodeName(string prefix)
    parameters:
    - id: prefix
      type: System.String
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    content.vb: Public Shared Function GenerateNodeName(prefix As String) As VirtualNodeName
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName*
  nameWithType.vb: VirtualNodeName.GenerateNodeName(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(String)
  name.vb: GenerateNodeName(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  id: ResetCounter
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: ResetCounter()
  nameWithType: VirtualNodeName.ResetCounter()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ResetCounter
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 45
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static void ResetCounter()
    content.vb: Public Shared Sub ResetCounter()
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: IsValidNodeName(VirtualNodeName)
  nameWithType: VirtualNodeName.IsValidNodeName(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: IsValidNodeName
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 51
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static bool IsValidNodeName(VirtualNodeName nodeName)
    parameters:
    - id: nodeName
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidNodeName(nodeName As VirtualNodeName) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  id: op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: implicit operator VirtualNodeName(string)
  nameWithType: VirtualNodeName.implicit operator VirtualNodeName(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualNodeName(string)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 77
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static implicit operator VirtualNodeName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    content.vb: Public Shared Widening Operator CType(name As String) As VirtualNodeName
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit*
  nameWithType.vb: VirtualNodeName.CType(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType(String)
  name.vb: CType(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  id: op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: implicit operator string(VirtualNodeName)
  nameWithType: VirtualNodeName.implicit operator string(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator string(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 82
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static implicit operator string(VirtualNodeName nodeName)
    parameters:
    - id: nodeName
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(nodeName As VirtualNodeName) As String
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit*
  nameWithType.vb: VirtualNodeName.CType(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: CType(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: Equals(VirtualNodeName?)
  nameWithType: VirtualNodeName.Equals(VirtualNodeName?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Equals
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 87
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(VirtualNodeName? other)
    parameters:
    - id: other
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As VirtualNodeName) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals*
  implements:
  - System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType.vb: VirtualNodeName.Equals(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: Equals(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(System.Object)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(System.Object)
  id: Equals(System.Object)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: VirtualNodeName.Equals(object?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(object?)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Equals
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 92
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals*
  nameWithType.vb: VirtualNodeName.Equals(Object)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(Object)
  name.vb: Equals(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  id: GetHashCode
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: VirtualNodeName.GetHashCode()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: GetHashCode
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 101
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: CompareTo(VirtualNodeName?)
  nameWithType: VirtualNodeName.CompareTo(VirtualNodeName?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: CompareTo
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 103
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(VirtualNodeName? other)
    parameters:
    - id: other
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  

         <table><thead><tr><th class="term"> Value</th><th class="description"> Meaning</th></tr></thead><tbody><tr><td class="term"> Less than zero</td><td class="description"> This instance precedes <code class="paramref">other</code> in the sort order.</td></tr><tr><td class="term"> Zero</td><td class="description"> This instance occurs in the same position in the sort order as <code class="paramref">other</code>.</td></tr><tr><td class="term"> Greater than zero</td><td class="description"> This instance follows <code class="paramref">other</code> in the sort order.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(other As VirtualNodeName) As Integer
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo*
  implements:
  - System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType.vb: VirtualNodeName.CompareTo(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: CompareTo(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(System.Object)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: CompareTo(object?)
  nameWithType: VirtualNodeName.CompareTo(object?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(object?)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: CompareTo
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 113
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  

         <table><thead><tr><th class="term"> Value</th><th class="description"> Meaning</th></tr></thead><tbody><tr><td class="term"> Less than zero</td><td class="description"> This instance precedes <code class="paramref">obj</code> in the sort order.</td></tr><tr><td class="term"> Zero</td><td class="description"> This instance occurs in the same position in the sort order as <code class="paramref">obj</code>.</td></tr><tr><td class="term"> Greater than zero</td><td class="description"> This instance follows <code class="paramref">obj</code> in the sort order.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">obj</code> is not the same type as this instance.
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: VirtualNodeName.CompareTo(Object)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(Object)
  name.vb: CompareTo(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: operator ==(VirtualNodeName?, VirtualNodeName?)
  nameWithType: VirtualNodeName.operator ==(VirtualNodeName?, VirtualNodeName?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator ==(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Equality
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 128
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static bool operator ==(VirtualNodeName? left, VirtualNodeName? right)
    parameters:
    - id: left
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    - id: right
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As VirtualNodeName, right As VirtualNodeName) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality*
  nameWithType.vb: VirtualNodeName.=(VirtualNodeName, VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.=(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: =(VirtualNodeName, VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  langs:
  - csharp
  - vb
  name: operator !=(VirtualNodeName?, VirtualNodeName?)
  nameWithType: VirtualNodeName.operator !=(VirtualNodeName?, VirtualNodeName?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator !=(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
      branch: docs/issue-138-initial
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Inequality
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeName.cs
    startLine: 146
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  syntax:
    content: public static bool operator !=(VirtualNodeName? left, VirtualNodeName? right)
    parameters:
    - id: left
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    - id: right
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As VirtualNodeName, right As VirtualNodeName) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality*
  nameWithType.vb: VirtualNodeName.<>(VirtualNodeName, VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.<>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: <>(VirtualNodeName, VirtualNodeName)
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  commentId: T:System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<VirtualNodeName>
  nameWithType: IEquatable<VirtualNodeName>
  fullName: System.IEquatable<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>
  nameWithType.vb: IEquatable(Of VirtualNodeName)
  fullName.vb: System.IEquatable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: IEquatable(Of VirtualNodeName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
- uid: System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  commentId: T:System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<VirtualNodeName>
  nameWithType: IComparable<VirtualNodeName>
  fullName: System.IComparable<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>
  nameWithType.vb: IComparable(Of VirtualNodeName)
  fullName.vb: System.IComparable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: IComparable(Of VirtualNodeName)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<VirtualNodeName>(VirtualNodeName)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<VirtualNodeName>(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of VirtualNodeName)(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: GenerateSingleTableDebugText(Of VirtualNodeName)(VirtualNodeName)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__ctor_System_String_
  name: VirtualNodeName
  nameWithType: VirtualNodeName.VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.VirtualNodeName
  nameWithType.vb: VirtualNodeName.New
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Name
  name: Name
  nameWithType: VirtualNodeName.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ToString
  name: ToString
  nameWithType: VirtualNodeName.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsRoot
  name: IsRoot
  nameWithType: VirtualNodeName.IsRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_System_String_
  name: GenerateNodeName
  nameWithType: VirtualNodeName.GenerateNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  name: VirtualNodeName
  nameWithType: VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ResetCounter
  name: ResetCounter
  nameWithType: VirtualNodeName.ResetCounter
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsValidNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: IsValidNodeName
  nameWithType: VirtualNodeName.IsValidNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit
  name: implicit operator
  nameWithType: VirtualNodeName.implicit operator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator
  nameWithType.vb: VirtualNodeName.CType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Equals_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: Equals
  nameWithType: VirtualNodeName.Equals
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals
- uid: System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(VirtualNodeName)
  nameWithType: IEquatable<VirtualNodeName>.Equals(VirtualNodeName)
  fullName: System.IEquatable<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType.vb: IEquatable(Of VirtualNodeName).Equals(VirtualNodeName)
  fullName.vb: System.IEquatable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName).Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  spec.csharp:
  - uid: System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GetHashCode
  name: GetHashCode
  nameWithType: VirtualNodeName.GetHashCode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_CompareTo_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: CompareTo
  nameWithType: VirtualNodeName.CompareTo
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo
- uid: System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  parent: System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(VirtualNodeName)
  nameWithType: IComparable<VirtualNodeName>.CompareTo(VirtualNodeName)
  fullName: System.IComparable<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType.vb: IComparable(Of VirtualNodeName).CompareTo(VirtualNodeName)
  fullName.vb: System.IComparable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName).CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  spec.csharp:
  - uid: System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
  spec.vb:
  - uid: System.IComparable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName}.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Equality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: operator ==
  nameWithType: VirtualNodeName.operator ==
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator ==
  nameWithType.vb: VirtualNodeName.=
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality*
    name: ==
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Equality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Inequality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: operator !=
  nameWithType: VirtualNodeName.operator !=
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator !=
  nameWithType.vb: VirtualNodeName.<>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality*
    name: '!='
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Inequality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
