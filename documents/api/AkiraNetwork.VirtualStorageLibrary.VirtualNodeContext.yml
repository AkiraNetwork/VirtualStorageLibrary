### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  id: VirtualNodeContext
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  langs:
  - csharp
  - vb
  name: VirtualNodeContext
  nameWithType: VirtualNodeContext
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  type: Class
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VirtualNodeContext
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 23
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    A class that holds context information for a node.

    It is returned during or after path traversal, providing information about the node, path,

    parent directory, depth, index, resolved path, and symbolic link.
  example: []
  syntax:
    content: public class VirtualNodeContext
    content.vb: Public Class VirtualNodeContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  id: Node
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: VirtualNodeContext.Node
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Node
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 32
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the node and can only be set within the assembly.
  example: []
  syntax:
    content: public VirtualNode? Node { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: The current node.
    content.vb: Public Property Node As VirtualNode
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  id: TraversalPath
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: TraversalPath
  nameWithType: VirtualNodeContext.TraversalPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: TraversalPath
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 40
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the traversal path and can only be set within the assembly.
  example: []
  syntax:
    content: public VirtualPath TraversalPath { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualPath
      description: The path used for node traversal.
    content.vb: Public Property TraversalPath As VirtualPath
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  id: ParentDirectory
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: ParentDirectory
  nameWithType: VirtualNodeContext.ParentDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ParentDirectory
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 48
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the parent directory of the node and can only be set within the assembly.
  example: []
  syntax:
    content: public VirtualDirectory? ParentDirectory { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
      description: The instance of the parent directory.
    content.vb: Public Property ParentDirectory As VirtualDirectory
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  id: Depth
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: VirtualNodeContext.Depth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Depth
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 57
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets the depth of the node and can only be set within the assembly.

    The root is considered 0.
  example: []
  syntax:
    content: public int Depth { get; }
    parameters: []
    return:
      type: System.Int32
      description: The depth of the node.
    content.vb: Public Property Depth As Integer
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  id: Index
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: VirtualNodeContext.Index
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Index
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 66
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets the index of the node and can only be set within the assembly.

    This is the index corresponding to the enumeration order within the directory.
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
      description: The index of the node.
    content.vb: Public Property Index As Integer
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  id: ResolvedPath
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: ResolvedPath
  nameWithType: VirtualNodeContext.ResolvedPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ResolvedPath
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 75
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets the resolved path and can only be set within the assembly.

    This represents the result of resolving a symbolic link.
  example: []
  syntax:
    content: public VirtualPath? ResolvedPath { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualPath
      description: The resolved path, or null.
    content.vb: Public Property ResolvedPath As VirtualPath
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  id: Resolved
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: Resolved
  nameWithType: VirtualNodeContext.Resolved
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Resolved
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 84
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets a value indicating whether the symbolic link has been resolved and can only

    be set within the assembly.
  example: []
  syntax:
    content: public bool Resolved { get; }
    parameters: []
    return:
      type: System.Boolean
      description: True if the link is resolved; otherwise, false.
    content.vb: Public Property Resolved As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  id: ResolvedLink
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: ResolvedLink
  nameWithType: VirtualNodeContext.ResolvedLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ResolvedLink
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 92
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the resolved symbolic link and can only be set within the assembly.
  example: []
  syntax:
    content: public VirtualSymbolicLink? ResolvedLink { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
      description: The resolved symbolic link, or null.
    content.vb: Public Property ResolvedLink As VirtualSymbolicLink
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: VirtualNodeContext(VirtualNode?, VirtualPath, VirtualDirectory?, int, int, VirtualPath?, bool, VirtualSymbolicLink?)
  nameWithType: VirtualNodeContext.VirtualNodeContext(VirtualNode?, VirtualPath, VirtualDirectory?, int, int, VirtualPath?, bool, VirtualSymbolicLink?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.VirtualNodeContext(AkiraNetwork.VirtualStorageLibrary.VirtualNode?, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory?, int, int, AkiraNetwork.VirtualStorageLibrary.VirtualPath?, bool, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink?)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 105
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public VirtualNodeContext(VirtualNode? node, VirtualPath traversalPath, VirtualDirectory? parentNode = null, int depth = 0, int index = 0, VirtualPath? resolvedPath = null, bool resolved = false, VirtualSymbolicLink? resolvedLink = null)
    parameters:
    - id: node
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: The node being traversed.
    - id: traversalPath
      type: AkiraNetwork.VirtualStorageLibrary.VirtualPath
      description: The path used for node traversal.
    - id: parentNode
      type: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
      description: The parent directory of the node.
    - id: depth
      type: System.Int32
      description: The depth of the node. The root is considered 0.
    - id: index
      type: System.Int32
      description: The index of the node. Corresponds to the enumeration order within the directory.
    - id: resolvedPath
      type: AkiraNetwork.VirtualStorageLibrary.VirtualPath
      description: The result of resolving a symbolic link.
    - id: resolved
      type: System.Boolean
      description: Indicates whether the symbolic link has been resolved.
    - id: resolvedLink
      type: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
      description: The resolved symbolic link.
    content.vb: Public Sub New(node As VirtualNode, traversalPath As VirtualPath, parentNode As VirtualDirectory = Nothing, depth As Integer = 0, index As Integer = 0, resolvedPath As VirtualPath = Nothing, resolved As Boolean = False, resolvedLink As VirtualSymbolicLink = Nothing)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor*
  nameWithType.vb: VirtualNodeContext.New(VirtualNode, VirtualPath, VirtualDirectory, Integer, Integer, VirtualPath, Boolean, VirtualSymbolicLink)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.New(AkiraNetwork.VirtualStorageLibrary.VirtualNode, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, Integer, Integer, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name.vb: New(VirtualNode, VirtualPath, VirtualDirectory, Integer, Integer, VirtualPath, Boolean, VirtualSymbolicLink)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  id: ToString
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VirtualNodeContext.ToString()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
      branch: bugfix/issue-188-check-link-dictionary-when-add-symboliclink
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ToString
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNodeContext.cs
    startLine: 129
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Returns a string representation of this instance's information.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representing this instance's information.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString*
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<VirtualNodeContext>(VirtualNodeContext)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<VirtualNodeContext>(VirtualNodeContext)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of VirtualNodeContext)(VirtualNodeContext)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext)(AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext)
  name.vb: GenerateSingleTableDebugText(Of VirtualNodeContext)(VirtualNodeContext)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
    name: VirtualNodeContext
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
    name: VirtualNodeContext
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
    name: VirtualNodeContext
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
    name: VirtualNodeContext
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Node
  name: Node
  nameWithType: VirtualNodeContext.Node
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNode
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  name: VirtualNode
  nameWithType: VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_TraversalPath
  name: TraversalPath
  nameWithType: VirtualNodeContext.TraversalPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualPath
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualPath.html
  name: VirtualPath
  nameWithType: VirtualPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ParentDirectory
  name: ParentDirectory
  nameWithType: VirtualNodeContext.ParentDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html
  name: VirtualDirectory
  nameWithType: VirtualDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Depth
  name: Depth
  nameWithType: VirtualNodeContext.Depth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Index
  name: Index
  nameWithType: VirtualNodeContext.Index
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedPath
  name: ResolvedPath
  nameWithType: VirtualNodeContext.ResolvedPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Resolved
  name: Resolved
  nameWithType: VirtualNodeContext.Resolved
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedLink
  name: ResolvedLink
  nameWithType: VirtualNodeContext.ResolvedLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html
  name: VirtualSymbolicLink
  nameWithType: VirtualSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  name: VirtualNodeContext
  nameWithType: VirtualNodeContext
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_System_Int32_System_Int32_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_
  name: VirtualNodeContext
  nameWithType: VirtualNodeContext.VirtualNodeContext
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.VirtualNodeContext
  nameWithType.vb: VirtualNodeContext.New
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ToString
  name: ToString
  nameWithType: VirtualNodeContext.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
