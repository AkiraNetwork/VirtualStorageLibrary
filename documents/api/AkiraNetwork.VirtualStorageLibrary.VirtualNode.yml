### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNode
  id: VirtualNode
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(System.Boolean)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  langs:
  - csharp
  - vb
  name: VirtualNode
  nameWithType: VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  type: Class
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VirtualNode
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 20
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Represents an abstract class for nodes.
  example: []
  syntax:
    content: 'public abstract class VirtualNode : IVirtualDeepCloneable<VirtualNode>'
    content.vb: Public MustInherit Class VirtualNode Implements IVirtualDeepCloneable(Of VirtualNode)
  inheritance:
  - System.Object
  derivedClasses:
  - AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem
  - AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  implements:
  - AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  id: Name
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VirtualNode.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Name
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 25
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the name of node.
  example: []
  syntax:
    content: public VirtualNodeName Name { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    content.vb: Public Property Name As VirtualNodeName
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  id: CreatedDate
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: VirtualNode.CreatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: CreatedDate
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 30
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the created date of the node. This date represents when the node was first created.
  example: []
  syntax:
    content: public DateTime CreatedDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  id: UpdatedDate
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: UpdatedDate
  nameWithType: VirtualNode.UpdatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: UpdatedDate
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 36
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets the updated date of the node. This date represents the last time the node was modified.

    It is set to the current date and time at the moment of instantiation or cloning.
  example: []
  syntax:
    content: public DateTime UpdatedDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property UpdatedDate As Date
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  id: NodeType
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: VirtualNode.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: NodeType
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 41
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the node type of node.
  example: []
  syntax:
    content: public abstract VirtualNodeType NodeType { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
    content.vb: Public MustOverride ReadOnly Property NodeType As VirtualNodeType
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  id: VID
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: VID
  nameWithType: VirtualNode.VID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VID
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 46
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the VID of node.
  example: []
  syntax:
    content: public VirtualID VID { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualID
    content.vb: Public Property VID As VirtualID
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(System.Boolean)
  id: DeepClone(System.Boolean)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: DeepClone(bool)
  nameWithType: VirtualNode.DeepClone(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(bool)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: DeepClone
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 60
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Creates a deep clone of the entity. However, the CreatedDate and UpdatedDate 

    should not be cloned as they are set to the current date and time at the time

    of cloning.
  example: []
  syntax:
    content: public abstract VirtualNode DeepClone(bool recursive = false)
    parameters:
    - id: recursive
      type: System.Boolean
      description: >-
        When true, all child nodes are also cloned, creating a

        deep copy of the entire tree. The default is false.

        The CreatedDate and UpdatedDate properties are not preserved.

        They are set to the current date and time at the moment of instantiation or cloning.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: Cloned <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref> instance
    content.vb: Public MustOverride Function DeepClone(recursive As Boolean = False) As VirtualNode
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone*
  implements:
  - AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}.DeepClone(System.Boolean)
  nameWithType.vb: VirtualNode.DeepClone(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(Boolean)
  name.vb: DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  id: Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: Update(VirtualNode)
  nameWithType: VirtualNode.Update(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Update
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 66
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Updates the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public abstract void Update(VirtualNode node)
    parameters:
    - id: node
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: Value to update
    content.vb: Public MustOverride Sub Update(node As VirtualNode)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  id: IsReferencedInStorage
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: IsReferencedInStorage
  nameWithType: VirtualNode.IsReferencedInStorage
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: IsReferencedInStorage
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 72
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Gets a value indicating whether referenced in storage.

    If this property is true, the node is referenced from storage. Otherwise, it is not.
  example: []
  syntax:
    content: public bool IsReferencedInStorage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsReferencedInStorage As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage*
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: VirtualNode(VirtualNodeName)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 78
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected VirtualNode(VirtualNodeName name)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of node.
    content.vb: Protected Sub New(name As VirtualNodeName)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor*
  nameWithType.vb: VirtualNode.New(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: VirtualNode(VirtualNodeName, DateTime)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName, DateTime)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 89
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected VirtualNode(VirtualNodeName name, DateTime createdDate)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of node.
    - id: createdDate
      type: System.DateTime
      description: The created date of node.
    content.vb: Protected Sub New(name As VirtualNodeName, createdDate As Date)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor*
  nameWithType.vb: VirtualNode.New(VirtualNodeName, Date)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date)
  name.vb: New(VirtualNodeName, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  langs:
  - csharp
  - vb
  name: VirtualNode(VirtualNodeName, DateTime, DateTime)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName, DateTime, DateTime)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime, System.DateTime)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualNode.cs
    startLine: 101
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected VirtualNode(VirtualNodeName name, DateTime createdDate, DateTime updatedDate)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of node.
    - id: createdDate
      type: System.DateTime
      description: The created date of node.
    - id: updatedDate
      type: System.DateTime
      description: The updated date of node.
    content.vb: Protected Sub New(name As VirtualNodeName, createdDate As Date, updatedDate As Date)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor*
  nameWithType.vb: VirtualNode.New(VirtualNodeName, Date, Date)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date, Date)
  name.vb: New(VirtualNodeName, Date, Date)
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  parent: AkiraNetwork.VirtualStorageLibrary
  definition: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  name: IVirtualDeepCloneable<VirtualNode>
  nameWithType: IVirtualDeepCloneable<VirtualNode>
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<AkiraNetwork.VirtualStorageLibrary.VirtualNode>
  nameWithType.vb: IVirtualDeepCloneable(Of VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name.vb: IVirtualDeepCloneable(Of VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: '>'
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<VirtualNode>(VirtualNode)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<VirtualNode>(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.VirtualNode>(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of VirtualNode)(VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode)(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name.vb: GenerateSingleTableDebugText(Of VirtualNode)(VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  definition: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: ResolveNodeType(VirtualNode)
  nameWithType: VirtualNodeExtensions.ResolveNodeType(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  name: IVirtualDeepCloneable<T>
  nameWithType: IVirtualDeepCloneable<T>
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>
  nameWithType.vb: IVirtualDeepCloneable(Of T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T)
  name.vb: IVirtualDeepCloneable(Of T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: ResolveNodeType(VirtualNode)
  nameWithType: VirtualNodeExtensions.ResolveNodeType(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html
  name: VirtualNodeExtensions
  nameWithType: VirtualNodeExtensions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Name
  name: Name
  nameWithType: VirtualNode.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  name: VirtualNodeName
  nameWithType: VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_CreatedDate
  name: CreatedDate
  nameWithType: VirtualNode.CreatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_UpdatedDate
  name: UpdatedDate
  nameWithType: VirtualNode.UpdatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_NodeType
  name: NodeType
  nameWithType: VirtualNode.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html
  name: VirtualNodeType
  nameWithType: VirtualNodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_VID
  name: VID
  nameWithType: VirtualNode.VID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualID
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualID.html
  name: VirtualID
  nameWithType: VirtualID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNode
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  name: VirtualNode
  nameWithType: VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_DeepClone_System_Boolean_
  name: DeepClone
  nameWithType: VirtualNode.DeepClone
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}.DeepClone(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}.DeepClone(System.Boolean)
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  definition: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  name: DeepClone(bool)
  nameWithType: IVirtualDeepCloneable<VirtualNode>.DeepClone(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<AkiraNetwork.VirtualStorageLibrary.VirtualNode>.DeepClone(bool)
  nameWithType.vb: IVirtualDeepCloneable(Of VirtualNode).DeepClone(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode).DeepClone(Boolean)
  name.vb: DeepClone(Boolean)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
  isExternal: true
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  name: DeepClone(bool)
  nameWithType: IVirtualDeepCloneable<T>.DeepClone(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>.DeepClone(bool)
  nameWithType.vb: IVirtualDeepCloneable(Of T).DeepClone(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T).DeepClone(Boolean)
  name.vb: DeepClone(Boolean)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: Update
  nameWithType: VirtualNode.Update
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_IsReferencedInStorage
  name: IsReferencedInStorage
  nameWithType: VirtualNode.IsReferencedInStorage
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  name: VirtualNode
  nameWithType: VirtualNode.VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode
  nameWithType.vb: VirtualNode.New
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New
  name.vb: New
