### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  id: IVirtualWildcardMatcher
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern(System.String)
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(System.String,System.String)
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  langs:
  - csharp
  - vb
  name: IVirtualWildcardMatcher
  nameWithType: IVirtualWildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  type: Interface
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: IVirtualWildcardMatcher
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 41
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Provides functionality for wildcard matching.
  example: []
  syntax:
    content: public interface IVirtualWildcardMatcher
    content.vb: Public Interface IVirtualWildcardMatcher
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  id: WildcardDictionary
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: WildcardDictionary
  nameWithType: IVirtualWildcardMatcher.WildcardDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: WildcardDictionary
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 50
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets a dictionary of wildcards and their corresponding regex patterns.
  example: []
  syntax:
    content: ReadOnlyDictionary<string, string> WildcardDictionary { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.String}
      description: >-
        A read-only dictionary containing wildcards as keys and their corresponding

        regex patterns as values.
    content.vb: ReadOnly Property WildcardDictionary As ReadOnlyDictionary(Of String, String)
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary*
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  id: Wildcards
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: Wildcards
  nameWithType: IVirtualWildcardMatcher.Wildcards
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Wildcards
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 58
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets a collection of available wildcards.
  example: []
  syntax:
    content: IEnumerable<string> Wildcards { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumerable collection of strings representing the available wildcards.
    content.vb: ReadOnly Property Wildcards As IEnumerable(Of String)
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards*
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  id: Patterns
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: Patterns
  nameWithType: IVirtualWildcardMatcher.Patterns
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Patterns
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 66
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets a collection of available patterns.
  example: []
  syntax:
    content: IEnumerable<string> Patterns { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumerable collection of strings representing the available patterns.
    content.vb: ReadOnly Property Patterns As IEnumerable(Of String)
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns*
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  id: Count
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IVirtualWildcardMatcher.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Count
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 74
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the number of wildcards.
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: An integer representing the number of wildcards available.
    content.vb: ReadOnly Property Count As Integer
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count*
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(System.String,System.String)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(System.String,System.String)
  id: PatternMatcher(System.String,System.String)
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: PatternMatcher(string, string)
  nameWithType: IVirtualWildcardMatcher.PatternMatcher(string, string)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(string, string)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: PatternMatcher
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 82
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Determines whether the specified node name matches the specified pattern.
  example: []
  syntax:
    content: bool PatternMatcher(string nodeName, string pattern)
    parameters:
    - id: nodeName
      type: System.String
      description: The node name to check.
    - id: pattern
      type: System.String
      description: The pattern to compare against.
    return:
      type: System.Boolean
      description: True if the node name matches the pattern; otherwise, false.
    content.vb: Function PatternMatcher(nodeName As String, pattern As String) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher*
  nameWithType.vb: IVirtualWildcardMatcher.PatternMatcher(String, String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(String, String)
  name.vb: PatternMatcher(String, String)
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern(System.String)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern(System.String)
  id: IsValidWildcardPattern(System.String)
  parent: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  langs:
  - csharp
  - vb
  name: IsValidWildcardPattern(string)
  nameWithType: IVirtualWildcardMatcher.IsValidWildcardPattern(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern(string)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
      branch: master
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: IsValidWildcardPattern
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualInterfaces.cs
    startLine: 89
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Checks if the provided wildcard pattern is valid.
  example: []
  syntax:
    content: bool IsValidWildcardPattern(string pattern)
    parameters:
    - id: pattern
      type: System.String
      description: The wildcard pattern to validate.
    return:
      type: System.Boolean
      description: True if the pattern is valid; otherwise, false.
    content.vb: Function IsValidWildcardPattern(pattern As String) As Boolean
  overload: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern*
  nameWithType.vb: IVirtualWildcardMatcher.IsValidWildcardPattern(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern(String)
  name.vb: IsValidWildcardPattern(String)
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<IVirtualWildcardMatcher>(IVirtualWildcardMatcher)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<IVirtualWildcardMatcher>(IVirtualWildcardMatcher)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher>(AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of IVirtualWildcardMatcher)(IVirtualWildcardMatcher)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher)(AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher)
  name.vb: GenerateSingleTableDebugText(Of IVirtualWildcardMatcher)(IVirtualWildcardMatcher)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
    name: IVirtualWildcardMatcher
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
    name: IVirtualWildcardMatcher
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
    name: IVirtualWildcardMatcher
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
    name: IVirtualWildcardMatcher
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_WildcardDictionary
  name: WildcardDictionary
  nameWithType: IVirtualWildcardMatcher.WildcardDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, string>
  nameWithType: ReadOnlyDictionary<string, string>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, string>
  nameWithType.vb: ReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, String)
  name.vb: ReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Wildcards
  name: Wildcards
  nameWithType: IVirtualWildcardMatcher.Wildcards
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Patterns
  name: Patterns
  nameWithType: IVirtualWildcardMatcher.Patterns
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Count
  name: Count
  nameWithType: IVirtualWildcardMatcher.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_PatternMatcher_System_String_System_String_
  name: PatternMatcher
  nameWithType: IVirtualWildcardMatcher.PatternMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_IsValidWildcardPattern_System_String_
  name: IsValidWildcardPattern
  nameWithType: IVirtualWildcardMatcher.IsValidWildcardPattern
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.IsValidWildcardPattern
