### YamlMime:ManagedReference
items:
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  id: VirtualItem`1
  parent: AkiraNetwork.VirtualStorageLibrary
  children:
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone(System.Boolean)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose(System.Boolean)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  langs:
  - csharp
  - vb
  name: VirtualItem<T>
  nameWithType: VirtualItem<T>
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>
  type: Class
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: VirtualItem
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 72
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Represents a virtual item. A virtual item is an object used to manage 

    item data within the virtual storage. It holds item data based on the 

    user-defined type T, facilitating the management and manipulation of 

    various types of content.


    Virtual items ensure that the actual data is distinctly present. If the 

    user-defined type T implements the <xref href="AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable%601" data-throw-if-not-resolved="false"></xref> 

    interface, a deep clone of the item data is created, ensuring separate 

    instances. If this interface is not implemented, shallow copies may result 

    in multiple virtual items referencing the same instance of the item data.
  example: []
  syntax:
    content: 'public class VirtualItem<T> : VirtualItem, IVirtualDeepCloneable<VirtualNode>, IDisposable'
    typeParameters:
    - id: T
      description: The user-defined type that can be freely specified by the user of this library.
    content.vb: Public Class VirtualItem(Of T) Inherits VirtualItem Implements IVirtualDeepCloneable(Of VirtualNode), IDisposable
  inheritance:
  - System.Object
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem
  implements:
  - AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  - System.IDisposable
  inheritedMembers:
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  - AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
  nameWithType.vb: VirtualItem(Of T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T)
  name.vb: VirtualItem(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  id: ItemData
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: ItemData
  nameWithType: VirtualItem<T>.ItemData
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ItemData
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ItemData
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 83
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets or sets the data associated with this item. This value can be null.
  example: []
  syntax:
    content: public T? ItemData { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property ItemData As T
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData*
  nameWithType.vb: VirtualItem(Of T).ItemData
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ItemData
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  id: NodeType
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: VirtualItem<T>.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.NodeType
  type: Property
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: NodeType
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 98
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Gets the type of the node.
  example: []
  syntax:
    content: public override VirtualNodeType NodeType { get; }
    parameters: []
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
    content.vb: Public Overrides ReadOnly Property NodeType As VirtualNodeType
  overridden: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType*
  nameWithType.vb: VirtualItem(Of T).NodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  id: '#ctor'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: VirtualItem()
  nameWithType: VirtualItem<T>.VirtualItem()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem()
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 104
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.

    The node name is automatically generated by the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public VirtualItem()
    content.vb: Public Sub New()
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  nameWithType.vb: VirtualItem(Of T).New()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New()
  name.vb: New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: VirtualItem(VirtualNodeName)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 115
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public VirtualItem(VirtualNodeName name)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of the item.
    content.vb: Public Sub New(name As VirtualNodeName)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: VirtualItem(VirtualNodeName, T?)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 128
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public VirtualItem(VirtualNodeName name, T? itemData)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of the item.
    - id: itemData
      type: '{T}'
      description: The data associated with this item. It is user-defined and can hold any type of data.
    content.vb: Public Sub New(name As VirtualNodeName, itemData As T)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T)
  name.vb: New(VirtualNodeName, T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: VirtualItem(VirtualNodeName, T?, DateTime)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?, DateTime)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?, System.DateTime)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 142
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public VirtualItem(VirtualNodeName name, T? itemData, DateTime createdDate)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of the item.
    - id: itemData
      type: '{T}'
      description: The data associated with this item. It is user-defined and can hold any type of data.
    - id: createdDate
      type: System.DateTime
      description: The creation date of the item.
    content.vb: Public Sub New(name As VirtualNodeName, itemData As T, createdDate As Date)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T, Date)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T, Date)
  name.vb: New(VirtualNodeName, T, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)
  id: '#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)'
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: VirtualItem(VirtualNodeName, T?, DateTime, DateTime)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?, DateTime, DateTime)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?, System.DateTime, System.DateTime)
  type: Constructor
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: .ctor
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 157
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Initializes a new instance of the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public VirtualItem(VirtualNodeName name, T? itemData, DateTime createdDate, DateTime updatedDate)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of the item.
    - id: itemData
      type: '{T}'
      description: The data associated with this item. It is user-defined and can hold any type of data.
    - id: createdDate
      type: System.DateTime
      description: The creation date of the item.
    - id: updatedDate
      type: System.DateTime
      description: The last update date of the item.
    content.vb: Public Sub New(name As VirtualNodeName, itemData As T, createdDate As Date, updatedDate As Date)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T, Date, Date)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T, Date, Date)
  name.vb: New(VirtualNodeName, T, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  id: op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: implicit operator VirtualItem<T>((VirtualNodeName nodeName, T? itemData))
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>((VirtualNodeName nodeName, T? itemData))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>((AkiraNetwork.VirtualStorageLibrary.VirtualNodeName nodeName, T? itemData))
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 168
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Converts a tuple (nodeName, itemData) to a <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator VirtualItem<T>((VirtualNodeName nodeName, T? itemData) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,{T}}
      description: A tuple containing the node name and item data.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
      description: A <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> initialized with the specified values.
    content.vb: Public Shared Widening Operator CType(tuple As (nodeName As VirtualNodeName, itemData As T)) As VirtualItem(Of T)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  nameWithType.vb: VirtualItem(Of T).CType((nodeName As VirtualNodeName, itemData As T))
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType((nodeName As AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, itemData As T))
  name.vb: CType((nodeName As VirtualNodeName, itemData As T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  id: op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: implicit operator VirtualItem<T>(T?)
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>(T?)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>(T?)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 181
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Implicitly converts the specified data of type T to a <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref>.

    The node name is automatically generated by the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public static implicit operator VirtualItem<T>(T? itemData)
    parameters:
    - id: itemData
      type: '{T}'
      description: The data associated with this item. It is user-defined and can hold any type of data.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
      description: A <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> initialized with the specified data.
    content.vb: Public Shared Widening Operator CType(itemData As T) As VirtualItem(Of T)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  nameWithType.vb: VirtualItem(Of T).CType(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType(T)
  name.vb: CType(T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  id: op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: implicit operator VirtualItem<T>(VirtualNodeName)
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 193
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Implicitly converts the specified node name to a <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator VirtualItem<T>(VirtualNodeName name)
    parameters:
    - id: name
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
      description: The name of the node.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
      description: A <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> initialized with the specified node name.
    content.vb: Public Shared Widening Operator CType(name As VirtualNodeName) As VirtualItem(Of T)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  nameWithType.vb: VirtualItem(Of T).CType(VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: CType(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  id: op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: implicit operator VirtualItem<T>(string)
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>(string)
  type: Operator
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: op_Implicit
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 203
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Implicitly converts the specified node name to a <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator VirtualItem<T>(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the node.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
      description: A <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> initialized with the specified node name.
    content.vb: Public Shared Widening Operator CType(name As String) As VirtualItem(Of T)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  nameWithType.vb: VirtualItem(Of T).CType(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType(String)
  name.vb: CType(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  id: ToString
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VirtualItem<T>.ToString()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ToString()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: ToString
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 212
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString*
  nameWithType.vb: VirtualItem(Of T).ToString()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone(System.Boolean)
  id: DeepClone(System.Boolean)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: DeepClone(bool)
  nameWithType: VirtualItem<T>.DeepClone(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.DeepClone(bool)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: DeepClone
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 219
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Creates a deep clone of this item.
  example: []
  syntax:
    content: public override VirtualNode DeepClone(bool recursive = false)
    parameters:
    - id: recursive
      type: System.Boolean
      description: If true, perform a deep clone recursively.
    return:
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: A deep clone of the current item as a <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualNode" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function DeepClone(recursive As Boolean = False) As VirtualNode
  overridden: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone*
  nameWithType.vb: VirtualItem(Of T).DeepClone(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).DeepClone(Boolean)
  name.vb: DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  id: Dispose
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: VirtualItem<T>.Dispose()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Dispose
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 235
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Releases the resources used by the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: VirtualItem(Of T).Dispose()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: VirtualItem<T>.Dispose(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose(bool)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Dispose
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 248
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: >-
    Releases the unmanaged resources used by the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> and optionally 

    releases the managed resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose*
  nameWithType.vb: VirtualItem(Of T).Dispose(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  id: Finalize
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: ~VirtualItem()
  nameWithType: VirtualItem<T>.~VirtualItem()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.~VirtualItem()
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Finalize
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 266
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Finalizer for the <xref href="AkiraNetwork.VirtualStorageLibrary.VirtualItem%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected ~VirtualItem()
    content.vb: 'Protected '
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  id: Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  langs:
  - csharp
  - vb
  name: Update(VirtualNode)
  nameWithType: VirtualItem<T>.Update(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  type: Method
  source:
    remote:
      path: AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
      branch: gh-pages
      repo: https://github.com/shimodateakira/VirtualStorageLibrary
    id: Update
    path: ../AkiraNetwork/VirtualStorageLibrary/VirtualItem.cs
    startLine: 278
  assemblies:
  - VirtualStorageLibrary
  namespace: AkiraNetwork.VirtualStorageLibrary
  summary: Updates the current item with the specified node's data.
  example: []
  syntax:
    content: public override void Update(VirtualNode node)
    parameters:
    - id: node
      type: AkiraNetwork.VirtualStorageLibrary.VirtualNode
      description: The node containing the data to update.
    content.vb: Public Overrides Sub Update(node As VirtualNode)
  overridden: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  overload: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the specified node is not of the same type as the current item.
  nameWithType.vb: VirtualItem(Of T).Update(VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
references:
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  name: IVirtualDeepCloneable<T>
  nameWithType: IVirtualDeepCloneable<T>
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>
  nameWithType.vb: IVirtualDeepCloneable(Of T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T)
  name.vb: IVirtualDeepCloneable(Of T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNode
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  name: VirtualNode
  nameWithType: VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItem
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem.html
  name: VirtualItem
  nameWithType: VirtualItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable{AkiraNetwork.VirtualStorageLibrary.VirtualNode}
  parent: AkiraNetwork.VirtualStorageLibrary
  definition: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  name: IVirtualDeepCloneable<VirtualNode>
  nameWithType: IVirtualDeepCloneable<VirtualNode>
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<AkiraNetwork.VirtualStorageLibrary.VirtualNode>
  nameWithType.vb: IVirtualDeepCloneable(Of VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name.vb: IVirtualDeepCloneable(Of VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: '>'
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
    name: IVirtualDeepCloneable
    href: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Name
  name: Name
  nameWithType: VirtualNode.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_CreatedDate
  name: CreatedDate
  nameWithType: VirtualNode.CreatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_UpdatedDate
  name: UpdatedDate
  nameWithType: VirtualNode.UpdatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_VID
  name: VID
  nameWithType: VirtualNode.VID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_IsReferencedInStorage
  name: IsReferencedInStorage
  nameWithType: VirtualNode.IsReferencedInStorage
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  definition: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<VirtualItem<T>>(VirtualItem<T>)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<VirtualItem<T>>(VirtualItem<T>)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>>(AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of VirtualItem(Of T))(VirtualItem(Of T))
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T))(AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T))
  name.vb: GenerateSingleTableDebugText(Of VirtualItem(Of T))(VirtualItem(Of T))
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0})
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0})
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  definition: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: ResolveNodeType(VirtualNode)
  nameWithType: VirtualNodeExtensions.ResolveNodeType(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  name: GenerateSingleTableDebugText<T>(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
    name: GenerateSingleTableDebugText
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  parent: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  name: VirtualTextFormatter
  nameWithType: VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: ResolveNodeType(VirtualNode)
  nameWithType: VirtualNodeExtensions.ResolveNodeType(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: ResolveNodeType
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html
  name: VirtualNodeExtensions
  nameWithType: VirtualNodeExtensions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  href: AkiraNetwork.html
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  spec.csharp:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
  spec.vb:
  - uid: AkiraNetwork
    name: AkiraNetwork
    href: AkiraNetwork.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary
    name: VirtualStorageLibrary
    href: AkiraNetwork.VirtualStorageLibrary.html
  - name: .
  - uid: AkiraNetwork.VirtualStorageLibrary.Utilities
    name: Utilities
    href: AkiraNetwork.VirtualStorageLibrary.Utilities.html
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ItemData
  name: ItemData
  nameWithType: VirtualItem<T>.ItemData
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ItemData
  nameWithType.vb: VirtualItem(Of T).ItemData
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ItemData
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_NodeType
  name: NodeType
  nameWithType: VirtualNode.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_NodeType
  name: NodeType
  nameWithType: VirtualItem<T>.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.NodeType
  nameWithType.vb: VirtualItem(Of T).NodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html
  name: VirtualNodeType
  nameWithType: VirtualNodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  name: VirtualItem<T>
  nameWithType: VirtualItem<T>
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>
  nameWithType.vb: VirtualItem(Of T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T)
  name.vb: VirtualItem(Of T)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  isExternal: true
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_System_String_
  name: GenerateNodeName(string)
  nameWithType: VirtualNodeName.GenerateNodeName(string)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(string)
  nameWithType.vb: VirtualNodeName.GenerateNodeName(String)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(String)
  name.vb: GenerateNodeName(String)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
    name: GenerateNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
    name: GenerateNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor
  name: VirtualItem
  nameWithType: VirtualItem<T>.VirtualItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem
  nameWithType.vb: VirtualItem(Of T).New
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New
  name.vb: New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  parent: AkiraNetwork.VirtualStorageLibrary
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  name: VirtualNodeName
  nameWithType: VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit
  name: implicit operator
  nameWithType: VirtualItem<T>.implicit operator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator
  nameWithType.vb: VirtualItem(Of T).CType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,{T}}
  commentId: T:System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0}
  parent: System
  definition: System.ValueTuple`2
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  name: (VirtualNodeName nodeName, T itemData)
  nameWithType: (VirtualNodeName nodeName, T itemData)
  fullName: (AkiraNetwork.VirtualStorageLibrary.VirtualNodeName nodeName, T itemData)
  nameWithType.vb: (nodeName As VirtualNodeName, itemData As T)
  fullName.vb: (nodeName As AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, itemData As T)
  name.vb: (nodeName As VirtualNodeName, itemData As T)
  spec.csharp:
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: " "
  - uid: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0}.nodeName
    name: nodeName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-akiranetwork.virtualstoragelibrary.virtualnodename,-0-.nodename
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0}.itemData
    name: itemData
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-akiranetwork.virtualstoragelibrary.virtualnodename,-0-.itemdata
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0}.nodeName
    name: nodeName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-akiranetwork.virtualstoragelibrary.virtualnodename,-0-.nodename
  - name: " "
  - name: As
  - name: " "
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
    name: VirtualNodeName
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0}.itemData
    name: itemData
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-akiranetwork.virtualstoragelibrary.virtualnodename,-0-.itemdata
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ToString
  name: ToString
  nameWithType: VirtualItem<T>.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ToString
  nameWithType.vb: VirtualItem(Of T).ToString
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualItem
  isExternal: true
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_DeepClone_System_Boolean_
  name: DeepClone(bool)
  nameWithType: VirtualItem.DeepClone(bool)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(bool)
  nameWithType.vb: VirtualItem.DeepClone(Boolean)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(Boolean)
  name.vb: DeepClone(Boolean)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
    name: DeepClone
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_DeepClone_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_DeepClone_System_Boolean_
  name: DeepClone
  nameWithType: VirtualItem<T>.DeepClone
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.DeepClone
  nameWithType.vb: VirtualItem(Of T).DeepClone
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).DeepClone
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Dispose
  name: Dispose
  nameWithType: VirtualItem<T>.Dispose
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose
  nameWithType.vb: VirtualItem(Of T).Dispose
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Finalize
  name: ~VirtualItem
  nameWithType: VirtualItem<T>.~VirtualItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.~VirtualItem
  spec.csharp:
  - name: "~"
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize*
    name: VirtualItem
    href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Finalize
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  parent: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: Update(VirtualNode)
  nameWithType: VirtualNode.Update(VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  spec.csharp:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: Update
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
  spec.vb:
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
    name: Update
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  - name: (
  - uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
    name: VirtualNode
    href: AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  - name: )
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update*
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update
  href: AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  name: Update
  nameWithType: VirtualItem<T>.Update
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Update
  nameWithType.vb: VirtualItem(Of T).Update
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Update
