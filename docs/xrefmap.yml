### YamlMime:XRefMap
sorted: true
references:
- uid: AkiraNetwork.VirtualStorageLibrary
  name: AkiraNetwork.VirtualStorageLibrary
  href: api/AkiraNetwork.VirtualStorageLibrary.html
  commentId: N:AkiraNetwork.VirtualStorageLibrary
  fullName: AkiraNetwork.VirtualStorageLibrary
  nameWithType: AkiraNetwork.VirtualStorageLibrary
- uid: AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate
  name: ActionNodeDelegate
  href: api/AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate
  fullName: AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate
  nameWithType: ActionNodeDelegate
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  name: IVirtualDeepCloneable<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1
  name.vb: IVirtualDeepCloneable(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T)
  nameWithType: IVirtualDeepCloneable<T>
  nameWithType.vb: IVirtualDeepCloneable(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T).DeepClone(Boolean)
  nameWithType: IVirtualDeepCloneable<T>.DeepClone(bool)
  nameWithType.vb: IVirtualDeepCloneable(Of T).DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable-1.html#AkiraNetwork_VirtualStorageLibrary_IVirtualDeepCloneable_1_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable`1.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable<T>.DeepClone
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualDeepCloneable(Of T).DeepClone
  nameWithType: IVirtualDeepCloneable<T>.DeepClone
  nameWithType.vb: IVirtualDeepCloneable(Of T).DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  name: IVirtualWildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher
  nameWithType: IVirtualWildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  nameWithType: IVirtualWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count*
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Count_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Count
  nameWithType: IVirtualWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(System.String,System.String)
  name: PatternMatcher(string, string)
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_PatternMatcher_System_String_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(System.String,System.String)
  name.vb: PatternMatcher(String, String)
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(string, string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher(String, String)
  nameWithType: IVirtualWildcardMatcher.PatternMatcher(string, string)
  nameWithType.vb: IVirtualWildcardMatcher.PatternMatcher(String, String)
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher*
  name: PatternMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_PatternMatcher_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.PatternMatcher
  nameWithType: IVirtualWildcardMatcher.PatternMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Patterns
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  nameWithType: IVirtualWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns*
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Patterns_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Patterns
  nameWithType: IVirtualWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_WildcardDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  nameWithType: IVirtualWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary*
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_WildcardDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.WildcardDictionary
  nameWithType: IVirtualWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Wildcards
  commentId: P:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  nameWithType: IVirtualWildcardMatcher.Wildcards
- uid: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards*
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_IVirtualWildcardMatcher_Wildcards_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.IVirtualWildcardMatcher.Wildcards
  nameWithType: IVirtualWildcardMatcher.Wildcards
- uid: AkiraNetwork.VirtualStorageLibrary.Localization
  name: AkiraNetwork.VirtualStorageLibrary.Localization
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.html
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Localization
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Localization
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources
  name: Resources
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Localization.Resources
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources
  nameWithType: Resources
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.#ctor
  name: Resources()
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Resources()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.New()
  nameWithType: Resources.Resources()
  nameWithType.vb: Resources.New()
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.#ctor*
  name: Resources
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Resources
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.New
  nameWithType: Resources.Resources
  nameWithType.vb: Resources.New
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute
  name: BasePathIsNotAbsolute
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_BasePathIsNotAbsolute
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute
  nameWithType: Resources.BasePathIsNotAbsolute
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute*
  name: BasePathIsNotAbsolute
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_BasePathIsNotAbsolute_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.BasePathIsNotAbsolute
  nameWithType: Resources.BasePathIsNotAbsolute
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot
  name: CannotAddRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotAddRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot
  nameWithType: Resources.CannotAddRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot*
  name: CannotAddRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotAddRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotAddRoot
  nameWithType: Resources.CannotAddRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory
  name: CannotMoveRootDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotMoveRootDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory
  nameWithType: Resources.CannotMoveRootDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory*
  name: CannotMoveRootDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotMoveRootDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotMoveRootDirectory
  nameWithType: Resources.CannotMoveRootDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem
  name: CannotReachBecauseNodeItem
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotReachBecauseNodeItem
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem
  nameWithType: Resources.CannotReachBecauseNodeItem
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem*
  name: CannotReachBecauseNodeItem
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotReachBecauseNodeItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeItem
  nameWithType: Resources.CannotReachBecauseNodeItem
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink
  name: CannotReachBecauseNodeSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotReachBecauseNodeSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink
  nameWithType: Resources.CannotReachBecauseNodeSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink*
  name: CannotReachBecauseNodeSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotReachBecauseNodeSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotReachBecauseNodeSymbolicLink
  nameWithType: Resources.CannotReachBecauseNodeSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory
  name: CannotRemoveNonEmptyDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotRemoveNonEmptyDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory
  nameWithType: Resources.CannotRemoveNonEmptyDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory*
  name: CannotRemoveNonEmptyDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotRemoveNonEmptyDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveNonEmptyDirectory
  nameWithType: Resources.CannotRemoveNonEmptyDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot
  name: CannotRemoveRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotRemoveRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot
  nameWithType: Resources.CannotRemoveRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot*
  name: CannotRemoveRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CannotRemoveRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CannotRemoveRoot
  nameWithType: Resources.CannotRemoveRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected
  name: CircularReferenceDetected
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CircularReferenceDetected
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected
  nameWithType: Resources.CircularReferenceDetected
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected*
  name: CircularReferenceDetected
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_CircularReferenceDetected_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.CircularReferenceDetected
  nameWithType: Resources.CircularReferenceDetected
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture
  name: Culture
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_Culture
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture
  nameWithType: Resources.Culture
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture*
  name: Culture
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_Culture_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.Culture
  nameWithType: Resources.Culture
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource
  name: DestinationIsSubdirectoryOfSource
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_DestinationIsSubdirectoryOfSource
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource
  nameWithType: Resources.DestinationIsSubdirectoryOfSource
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource*
  name: DestinationIsSubdirectoryOfSource
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_DestinationIsSubdirectoryOfSource_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationIsSubdirectoryOfSource
  nameWithType: Resources.DestinationIsSubdirectoryOfSource
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink
  name: DestinationNodeIsItemOrSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_DestinationNodeIsItemOrSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink
  nameWithType: Resources.DestinationNodeIsItemOrSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink*
  name: DestinationNodeIsItemOrSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_DestinationNodeIsItemOrSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.DestinationNodeIsItemOrSymbolicLink
  nameWithType: Resources.DestinationNodeIsItemOrSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName
  name: InvalidNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_InvalidNodeName
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName
  nameWithType: Resources.InvalidNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName*
  name: InvalidNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_InvalidNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.InvalidNodeName
  nameWithType: Resources.InvalidNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath
  name: LinkPathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_LinkPathIsNotAbsolutePath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath
  nameWithType: Resources.LinkPathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath*
  name: LinkPathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_LinkPathIsNotAbsolutePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.LinkPathIsNotAbsolutePath
  nameWithType: Resources.LinkPathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue
  name: NegativeDepthValue
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NegativeDepthValue
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue
  nameWithType: Resources.NegativeDepthValue
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue*
  name: NegativeDepthValue
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NegativeDepthValue_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NegativeDepthValue
  nameWithType: Resources.NegativeDepthValue
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists
  name: NewNameNodeAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NewNameNodeAlreadyExists
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists
  nameWithType: Resources.NewNameNodeAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists*
  name: NewNameNodeAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NewNameNodeAlreadyExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameNodeAlreadyExists
  nameWithType: Resources.NewNameNodeAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent
  name: NewNameSameAsCurrent
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NewNameSameAsCurrent
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent
  nameWithType: Resources.NewNameSameAsCurrent
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent*
  name: NewNameSameAsCurrent
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NewNameSameAsCurrent_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NewNameSameAsCurrent
  nameWithType: Resources.NewNameSameAsCurrent
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists
  name: NodeAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeAlreadyExists
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists
  nameWithType: Resources.NodeAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists*
  name: NodeAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeAlreadyExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeAlreadyExists
  nameWithType: Resources.NodeAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory
  name: NodeIsNotVirtualDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory
  nameWithType: Resources.NodeIsNotVirtualDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory*
  name: NodeIsNotVirtualDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualDirectory
  nameWithType: Resources.NodeIsNotVirtualDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem
  name: NodeIsNotVirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualItem
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem
  nameWithType: Resources.NodeIsNotVirtualItem
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem*
  name: NodeIsNotVirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualItem
  nameWithType: Resources.NodeIsNotVirtualItem
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink
  name: NodeIsNotVirtualSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink
  nameWithType: Resources.NodeIsNotVirtualSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink*
  name: NodeIsNotVirtualSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeIsNotVirtualSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeIsNotVirtualSymbolicLink
  nameWithType: Resources.NodeIsNotVirtualSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound
  name: NodeNotFound
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeNotFound
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound
  nameWithType: Resources.NodeNotFound
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound*
  name: NodeNotFound
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeNotFound_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeNotFound
  nameWithType: Resources.NodeNotFound
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination
  name: NodeWithSameNameAtDestination
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeWithSameNameAtDestination
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination
  nameWithType: Resources.NodeWithSameNameAtDestination
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination*
  name: NodeWithSameNameAtDestination
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_NodeWithSameNameAtDestination_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.NodeWithSameNameAtDestination
  nameWithType: Resources.NodeWithSameNameAtDestination
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty
  name: ParameterIsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsEmpty
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty
  nameWithType: Resources.ParameterIsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty*
  name: ParameterIsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsEmpty_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsEmpty
  nameWithType: Resources.ParameterIsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName
  name: ParameterIsNotVirtualNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNotVirtualNodeName
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName
  nameWithType: Resources.ParameterIsNotVirtualNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName*
  name: ParameterIsNotVirtualNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNotVirtualNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualNodeName
  nameWithType: Resources.ParameterIsNotVirtualNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath
  name: ParameterIsNotVirtualPath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNotVirtualPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath
  nameWithType: Resources.ParameterIsNotVirtualPath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath*
  name: ParameterIsNotVirtualPath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNotVirtualPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNotVirtualPath
  nameWithType: Resources.ParameterIsNotVirtualPath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty
  name: ParameterIsNullOrEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNullOrEmpty
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty
  nameWithType: Resources.ParameterIsNullOrEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty*
  name: ParameterIsNullOrEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ParameterIsNullOrEmpty_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ParameterIsNullOrEmpty
  nameWithType: Resources.ParameterIsNullOrEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty
  name: PathCannotBeEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathCannotBeEmpty
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty
  nameWithType: Resources.PathCannotBeEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty*
  name: PathCannotBeEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathCannotBeEmpty_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathCannotBeEmpty
  nameWithType: Resources.PathCannotBeEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath
  name: PathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathIsNotAbsolutePath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath
  nameWithType: Resources.PathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath*
  name: PathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathIsNotAbsolutePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathIsNotAbsolutePath
  nameWithType: Resources.PathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot
  name: PathNormalizationAboveRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathNormalizationAboveRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot
  nameWithType: Resources.PathNormalizationAboveRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot*
  name: PathNormalizationAboveRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathNormalizationAboveRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNormalizationAboveRoot
  nameWithType: Resources.PathNormalizationAboveRoot
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound
  name: PathNotFound
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathNotFound
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound
  nameWithType: Resources.PathNotFound
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound*
  name: PathNotFound
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PathNotFound_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PathNotFound
  nameWithType: Resources.PathNotFound
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty
  name: PrefixIsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PrefixIsEmpty
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty
  nameWithType: Resources.PrefixIsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty*
  name: PrefixIsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_PrefixIsEmpty_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.PrefixIsEmpty
  nameWithType: Resources.PrefixIsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict
  name: RecursiveSubdirectoryConflict
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_RecursiveSubdirectoryConflict
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict
  nameWithType: Resources.RecursiveSubdirectoryConflict
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict*
  name: RecursiveSubdirectoryConflict
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_RecursiveSubdirectoryConflict_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RecursiveSubdirectoryConflict
  nameWithType: Resources.RecursiveSubdirectoryConflict
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager
  name: ResourceManager
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ResourceManager
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager
  nameWithType: Resources.ResourceManager
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager*
  name: ResourceManager
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_ResourceManager_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.ResourceManager
  nameWithType: Resources.ResourceManager
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists
  name: RootAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_RootAlreadyExists
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists
  nameWithType: Resources.RootAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists*
  name: RootAlreadyExists
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_RootAlreadyExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.RootAlreadyExists
  nameWithType: Resources.RootAlreadyExists
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy
  name: SourceAndDestinationPathSameForCopy
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_SourceAndDestinationPathSameForCopy
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy
  nameWithType: Resources.SourceAndDestinationPathSameForCopy
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy*
  name: SourceAndDestinationPathSameForCopy
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_SourceAndDestinationPathSameForCopy_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForCopy
  nameWithType: Resources.SourceAndDestinationPathSameForCopy
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove
  name: SourceAndDestinationPathSameForMove
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_SourceAndDestinationPathSameForMove
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove
  nameWithType: Resources.SourceAndDestinationPathSameForMove
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove*
  name: SourceAndDestinationPathSameForMove
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_SourceAndDestinationPathSameForMove_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.SourceAndDestinationPathSameForMove
  nameWithType: Resources.SourceAndDestinationPathSameForMove
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath
  name: TargetPathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_TargetPathIsNotAbsolutePath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath
  nameWithType: Resources.TargetPathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath*
  name: TargetPathIsNotAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_TargetPathIsNotAbsolutePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.TargetPathIsNotAbsolutePath
  nameWithType: Resources.TargetPathIsNotAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceCulture
  name: resourceCulture
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_resourceCulture
  commentId: F:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceCulture
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceCulture
  nameWithType: Resources.resourceCulture
- uid: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceMan
  name: resourceMan
  href: api/AkiraNetwork.VirtualStorageLibrary.Localization.Resources.html#AkiraNetwork_VirtualStorageLibrary_Localization_Resources_resourceMan
  commentId: F:AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceMan
  fullName: AkiraNetwork.VirtualStorageLibrary.Localization.Resources.resourceMan
  nameWithType: Resources.resourceMan
- uid: AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate
  name: NotifyNodeDelegate
  href: api/AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate
  fullName: AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate
  nameWithType: NotifyNodeDelegate
- uid: AkiraNetwork.VirtualStorageLibrary.PatternMatch
  name: PatternMatch
  href: api/AkiraNetwork.VirtualStorageLibrary.PatternMatch.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.PatternMatch
  fullName: AkiraNetwork.VirtualStorageLibrary.PatternMatch
  nameWithType: PatternMatch
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities
  name: AkiraNetwork.VirtualStorageLibrary.Utilities
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.html
  commentId: N:AkiraNetwork.VirtualStorageLibrary.Utilities
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities
  nameWithType: AkiraNetwork.VirtualStorageLibrary.Utilities
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  name: VirtualTextFormatter
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter
  nameWithType: VirtualTextFormatter
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText*
  name: GenerateLinkTableDebugText
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateLinkTableDebugText_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText
  nameWithType: VirtualTextFormatter.GenerateLinkTableDebugText
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{``0})
  name: GenerateLinkTableDebugText<T>(VirtualStorage<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateLinkTableDebugText__1_AkiraNetwork_VirtualStorageLibrary_VirtualStorage___0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{``0})
  name.vb: GenerateLinkTableDebugText(Of T)(VirtualStorage(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText<T>(AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateLinkTableDebugText(Of T)(AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T))
  nameWithType: VirtualTextFormatter.GenerateLinkTableDebugText<T>(VirtualStorage<T>)
  nameWithType.vb: VirtualTextFormatter.GenerateLinkTableDebugText(Of T)(VirtualStorage(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText*
  name: GenerateSingleTableDebugText
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  name: GenerateSingleTableDebugText<T>(T)
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateSingleTableDebugText__1___0_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText``1(``0)
  name.vb: GenerateSingleTableDebugText(Of T)(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
  nameWithType: VirtualTextFormatter.GenerateSingleTableDebugText<T>(T)
  nameWithType.vb: VirtualTextFormatter.GenerateSingleTableDebugText(Of T)(T)
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText*
  name: GenerateTableDebugText
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateTableDebugText_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText
  nameWithType: VirtualTextFormatter.GenerateTableDebugText
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText``1(System.Collections.Generic.IEnumerable{``0})
  name: GenerateTableDebugText<T>(IEnumerable<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateTableDebugText__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: GenerateTableDebugText(Of T)(IEnumerable(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTableDebugText(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: VirtualTextFormatter.GenerateTableDebugText<T>(IEnumerable<T>)
  nameWithType.vb: VirtualTextFormatter.GenerateTableDebugText(Of T)(IEnumerable(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText*
  name: GenerateTreeDebugText
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateTreeDebugText_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText
  nameWithType: VirtualTextFormatter.GenerateTreeDebugText
- uid: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{``0},AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean)
  name: GenerateTreeDebugText<T>(VirtualStorage<T>, VirtualPath, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.html#AkiraNetwork_VirtualStorageLibrary_Utilities_VirtualTextFormatter_GenerateTreeDebugText__1_AkiraNetwork_VirtualStorageLibrary_VirtualStorage___0__AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText``1(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{``0},AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean)
  name.vb: GenerateTreeDebugText(Of T)(VirtualStorage(Of T), VirtualPath, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText<T>(AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>, AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.Utilities.VirtualTextFormatter.GenerateTreeDebugText(Of T)(AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T), AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, Boolean)
  nameWithType: VirtualTextFormatter.GenerateTreeDebugText<T>(VirtualStorage<T>, VirtualPath, bool, bool)
  nameWithType.vb: VirtualTextFormatter.GenerateTreeDebugText(Of T)(VirtualStorage(Of T), VirtualPath, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector
  name: VirtualCycleDetector
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector
  nameWithType: VirtualCycleDetector
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.#ctor
  name: VirtualCycleDetector()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.VirtualCycleDetector()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.New()
  nameWithType: VirtualCycleDetector.VirtualCycleDetector()
  nameWithType.vb: VirtualCycleDetector.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.#ctor*
  name: VirtualCycleDetector
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.VirtualCycleDetector
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.New
  nameWithType: VirtualCycleDetector.VirtualCycleDetector
  nameWithType.vb: VirtualCycleDetector.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear
  name: Clear()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_Clear
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear()
  nameWithType: VirtualCycleDetector.Clear()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear*
  name: Clear
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_Clear_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Clear
  nameWithType: VirtualCycleDetector.Clear
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count
  nameWithType: VirtualCycleDetector.Count
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count*
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_Count_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.Count
  nameWithType: VirtualCycleDetector.Count
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary
  name: CycleDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_CycleDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary
  nameWithType: VirtualCycleDetector.CycleDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary*
  name: CycleDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_CycleDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.CycleDictionary
  nameWithType: VirtualCycleDetector.CycleDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle(AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name: IsNodeInCycle(VirtualSymbolicLink)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_IsNodeInCycle_AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle(AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle(AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  nameWithType: VirtualCycleDetector.IsNodeInCycle(VirtualSymbolicLink)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle*
  name: IsNodeInCycle
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.html#AkiraNetwork_VirtualStorageLibrary_VirtualCycleDetector_IsNodeInCycle_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualCycleDetector.IsNodeInCycle
  nameWithType: VirtualCycleDetector.IsNodeInCycle
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  name: VirtualDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  nameWithType: VirtualDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor
  name: VirtualDirectory()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.VirtualDirectory()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.New()
  nameWithType: VirtualDirectory.VirtualDirectory()
  nameWithType.vb: VirtualDirectory.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: VirtualDirectory(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.VirtualDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.VirtualDirectory(VirtualNodeName)
  nameWithType.vb: VirtualDirectory.New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name: VirtualDirectory(VirtualNodeName, DateTime, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_DateTime_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name.vb: New(VirtualNodeName, Date, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.VirtualDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date, Date)
  nameWithType: VirtualDirectory.VirtualDirectory(VirtualNodeName, DateTime, DateTime)
  nameWithType.vb: VirtualDirectory.New(VirtualNodeName, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor*
  name: VirtualDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.VirtualDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.New
  nameWithType: VirtualDirectory.VirtualDirectory
  nameWithType.vb: VirtualDirectory.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add(AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Boolean)
  name: Add(VirtualNode, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Add_AkiraNetwork_VirtualStorageLibrary_VirtualNode_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add(AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Boolean)
  name.vb: Add(VirtualNode, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add(AkiraNetwork.VirtualStorageLibrary.VirtualNode, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add(AkiraNetwork.VirtualStorageLibrary.VirtualNode, Boolean)
  nameWithType: VirtualDirectory.Add(VirtualNode, bool)
  nameWithType.vb: VirtualDirectory.Add(VirtualNode, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add*
  name: Add
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Add_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Add
  nameWithType: VirtualDirectory.Add
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name: AddDirectory(VirtualNodeName, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name.vb: AddDirectory(VirtualNodeName, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Boolean)
  nameWithType: VirtualDirectory.AddDirectory(VirtualNodeName, bool)
  nameWithType.vb: VirtualDirectory.AddDirectory(VirtualNodeName, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory*
  name: AddDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddDirectory
  nameWithType: VirtualDirectory.AddDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem*
  name: AddItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem
  nameWithType: VirtualDirectory.AddItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,``0,System.Boolean)
  name: AddItem<T>(VirtualNodeName, T?, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddItem__1_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName___0_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,``0,System.Boolean)
  name.vb: AddItem(Of T)(VirtualNodeName, T, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem<T>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddItem(Of T)(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T, Boolean)
  nameWithType: VirtualDirectory.AddItem<T>(VirtualNodeName, T?, bool)
  nameWithType.vb: VirtualDirectory.AddItem(Of T)(VirtualNodeName, T, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: AddSymbolicLink(VirtualNodeName, VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: AddSymbolicLink(VirtualNodeName, VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualDirectory.AddSymbolicLink(VirtualNodeName, VirtualPath, bool)
  nameWithType.vb: VirtualDirectory.AddSymbolicLink(VirtualNodeName, VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink*
  name: AddSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AddSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.AddSymbolicLink
  nameWithType: VirtualDirectory.AddSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count
  nameWithType: VirtualDirectory.Count
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count*
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Count_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Count
  nameWithType: VirtualDirectory.Count
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone(Boolean)
  nameWithType: VirtualDirectory.DeepClone(bool)
  nameWithType.vb: VirtualDirectory.DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DeepClone
  nameWithType: VirtualDirectory.DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount
  name: DirectoryCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount
  nameWithType: VirtualDirectory.DirectoryCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount*
  name: DirectoryCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryCount
  nameWithType: VirtualDirectory.DirectoryCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: DirectoryExists(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryExists_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.DirectoryExists(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists*
  name: DirectoryExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryExists
  nameWithType: VirtualDirectory.DirectoryExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount
  name: DirectoryViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryViewCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount
  nameWithType: VirtualDirectory.DirectoryViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount*
  name: DirectoryViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_DirectoryViewCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.DirectoryViewCount
  nameWithType: VirtualDirectory.DirectoryViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name: Get(VirtualNodeName, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Get_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name.vb: Get(VirtualNodeName, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Boolean)
  nameWithType: VirtualDirectory.Get(VirtualNodeName, bool)
  nameWithType.vb: VirtualDirectory.Get(VirtualNodeName, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get*
  name: Get
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Get_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Get
  nameWithType: VirtualDirectory.Get
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: GetDirectory(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.GetDirectory(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory*
  name: GetDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetDirectory
  nameWithType: VirtualDirectory.GetDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator
  name: GetEnumerator()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetEnumerator
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator()
  nameWithType: VirtualDirectory.GetEnumerator()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator*
  name: GetEnumerator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetEnumerator_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetEnumerator
  nameWithType: VirtualDirectory.GetEnumerator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem*
  name: GetItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem
  nameWithType: VirtualDirectory.GetItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: GetItem<T>(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetItem__1_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem``1(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: GetItem(Of T)(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem<T>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetItem(Of T)(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.GetItem<T>(VirtualNodeName)
  nameWithType.vb: VirtualDirectory.GetItem(Of T)(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView
  name: GetNodesView()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetNodesView
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView()
  nameWithType: VirtualDirectory.GetNodesView()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView*
  name: GetNodesView
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetNodesView_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetNodesView
  nameWithType: VirtualDirectory.GetNodesView
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: GetSymbolicLink(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.GetSymbolicLink(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink*
  name: GetSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_GetSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.GetSymbolicLink
  nameWithType: VirtualDirectory.GetSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Indexer(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: this[VirtualNodeName]
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Indexer_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Indexer(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: this[](VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.this[AkiraNetwork.VirtualStorageLibrary.VirtualNodeName]
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.this[](AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.this[VirtualNodeName]
  nameWithType.vb: VirtualDirectory.this[](VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Indexer*
  name: this
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Indexer_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Indexer
  isSpec: "True"
  name.vb: this[]
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.this
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.this[]
  nameWithType: VirtualDirectory.this
  nameWithType.vb: VirtualDirectory.this[]
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount
  name: ItemCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount
  nameWithType: VirtualDirectory.ItemCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount*
  name: ItemCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemCount
  nameWithType: VirtualDirectory.ItemCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: ItemExists(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemExists_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.ItemExists(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists*
  name: ItemExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemExists
  nameWithType: VirtualDirectory.ItemExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount
  name: ItemViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemViewCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount
  nameWithType: VirtualDirectory.ItemViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount*
  name: ItemViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ItemViewCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ItemViewCount
  nameWithType: VirtualDirectory.ItemViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: NodeExists(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeExists_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.NodeExists(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists*
  name: NodeExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeExists
  nameWithType: VirtualDirectory.NodeExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames
  name: NodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeNames
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames
  nameWithType: VirtualDirectory.NodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames*
  name: NodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeNames_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeNames
  nameWithType: VirtualDirectory.NodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType
  nameWithType: VirtualDirectory.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType*
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodeType
  nameWithType: VirtualDirectory.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes
  name: Nodes
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Nodes
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes
  nameWithType: VirtualDirectory.Nodes
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes*
  name: Nodes
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Nodes_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Nodes
  nameWithType: VirtualDirectory.Nodes
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView
  name: NodesView
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodesView
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView
  nameWithType: VirtualDirectory.NodesView
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView*
  name: NodesView
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodesView_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesView
  nameWithType: VirtualDirectory.NodesView
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount
  name: NodesViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodesViewCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount
  nameWithType: VirtualDirectory.NodesViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount*
  name: NodesViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_NodesViewCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.NodesViewCount
  nameWithType: VirtualDirectory.NodesViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: Remove(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Remove_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualDirectory.Remove(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove*
  name: Remove
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Remove_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Remove
  nameWithType: VirtualDirectory.Remove
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount
  name: SymbolicLinkCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount
  nameWithType: VirtualDirectory.SymbolicLinkCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount*
  name: SymbolicLinkCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkCount
  nameWithType: VirtualDirectory.SymbolicLinkCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: SymbolicLinkExists(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkExists_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.SymbolicLinkExists(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists*
  name: SymbolicLinkExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkExists
  nameWithType: VirtualDirectory.SymbolicLinkExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount
  name: SymbolicLinkViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkViewCount
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount
  nameWithType: VirtualDirectory.SymbolicLinkViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount*
  name: SymbolicLinkViewCount
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_SymbolicLinkViewCount_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.SymbolicLinkViewCount
  nameWithType: VirtualDirectory.SymbolicLinkViewCount
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString()
  nameWithType: VirtualDirectory.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.ToString
  nameWithType: VirtualDirectory.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: Update(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualDirectory.Update(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update*
  name: Update
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_Update_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.Update
  nameWithType: VirtualDirectory.Update
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: operator +(VirtualDirectory, VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name.vb: +(VirtualDirectory, VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.+(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualDirectory.operator +(VirtualDirectory, VirtualNode)
  nameWithType.vb: VirtualDirectory.+(VirtualDirectory, VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: operator +(VirtualDirectory, VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: +(VirtualDirectory, VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.+(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.operator +(VirtualDirectory, VirtualNodeName)
  nameWithType.vb: VirtualDirectory.+(VirtualDirectory, VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition*
  name: operator +
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Addition_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Addition
  isSpec: "True"
  name.vb: +
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.operator +
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.+
  nameWithType: VirtualDirectory.operator +
  nameWithType.vb: VirtualDirectory.+
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  name: implicit operator VirtualDirectory(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Implicit_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__AkiraNetwork_VirtualStorageLibrary_VirtualDirectory
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~AkiraNetwork.VirtualStorageLibrary.VirtualDirectory
  name.vb: CType(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.CType(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualDirectory.implicit operator VirtualDirectory(VirtualNodeName)
  nameWithType.vb: VirtualDirectory.CType(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Implicit*
  name: implicit operator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Implicit_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.implicit operator
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.CType
  nameWithType: VirtualDirectory.implicit operator
  nameWithType.vb: VirtualDirectory.CType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Subtraction(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: operator -(VirtualDirectory, VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Subtraction_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Subtraction(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name.vb: -(VirtualDirectory, VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.operator -(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.-(AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualDirectory.operator -(VirtualDirectory, VirtualNode)
  nameWithType.vb: VirtualDirectory.-(VirtualDirectory, VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Subtraction*
  name: operator -
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_op_Subtraction_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.op_Subtraction
  isSpec: "True"
  name.vb: '-'
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.operator -
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectory.-
  nameWithType: VirtualDirectory.operator -
  nameWithType.vb: VirtualDirectory.-
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1
  name: VirtualDirectoryAdapter<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1
  name.vb: VirtualDirectoryAdapter(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter(Of T)
  nameWithType: VirtualDirectoryAdapter<T>
  nameWithType.vb: VirtualDirectoryAdapter(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name: VirtualDirectoryAdapter(VirtualStorage<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectoryAdapter_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualStorage__0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name.vb: New(VirtualStorage(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter<T>.VirtualDirectoryAdapter(AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T))
  nameWithType: VirtualDirectoryAdapter<T>.VirtualDirectoryAdapter(VirtualStorage<T>)
  nameWithType.vb: VirtualDirectoryAdapter(Of T).New(VirtualStorage(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.#ctor*
  name: VirtualDirectoryAdapter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectoryAdapter_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter<T>.VirtualDirectoryAdapter
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter(Of T).New
  nameWithType: VirtualDirectoryAdapter<T>.VirtualDirectoryAdapter
  nameWithType.vb: VirtualDirectoryAdapter(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: this[VirtualPath, bool]
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectoryAdapter_1_Item_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: this[](VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter<T>.this[AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool]
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter(Of T).this[](AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualDirectoryAdapter<T>.this[VirtualPath, bool]
  nameWithType.vb: VirtualDirectoryAdapter(Of T).this[](VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.Item*
  name: this
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualDirectoryAdapter_1_Item_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter<T>.this
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualDirectoryAdapter(Of T).this[]
  nameWithType: VirtualDirectoryAdapter<T>.this
  nameWithType.vb: VirtualDirectoryAdapter(Of T).this[]
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualException
  name: VirtualException
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualException.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualException
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualException
  nameWithType: VirtualException
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor
  name: VirtualException()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualException.html#AkiraNetwork_VirtualStorageLibrary_VirtualException__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualException.VirtualException()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualException.New()
  nameWithType: VirtualException.VirtualException()
  nameWithType.vb: VirtualException.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor(System.String)
  name: VirtualException(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualException.html#AkiraNetwork_VirtualStorageLibrary_VirtualException__ctor_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor(System.String)
  name.vb: New(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualException.VirtualException(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualException.New(String)
  nameWithType: VirtualException.VirtualException(string)
  nameWithType.vb: VirtualException.New(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor(System.String,System.Exception)
  name: VirtualException(string, Exception)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualException.html#AkiraNetwork_VirtualStorageLibrary_VirtualException__ctor_System_String_System_Exception_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualException.VirtualException(string, System.Exception)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualException.New(String, System.Exception)
  nameWithType: VirtualException.VirtualException(string, Exception)
  nameWithType.vb: VirtualException.New(String, Exception)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor*
  name: VirtualException
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualException.html#AkiraNetwork_VirtualStorageLibrary_VirtualException__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualException.VirtualException
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualException.New
  nameWithType: VirtualException.VirtualException
  nameWithType.vb: VirtualException.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2
  name: VirtualGroupCondition<T, TKey>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2
  name.vb: VirtualGroupCondition(Of T, TKey)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey)
  nameWithType: VirtualGroupCondition<T, TKey>
  nameWithType.vb: VirtualGroupCondition(Of T, TKey)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Boolean)
  name: VirtualGroupCondition(Expression<Func<T, TKey>>, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Boolean)
  name.vb: New(Expression(Of Func(Of T, TKey)), Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.VirtualGroupCondition(System.Linq.Expressions.Expression<System.Func<T, TKey>>, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).New(System.Linq.Expressions.Expression(Of System.Func(Of T, TKey)), Boolean)
  nameWithType: VirtualGroupCondition<T, TKey>.VirtualGroupCondition(Expression<Func<T, TKey>>, bool)
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).New(Expression(Of Func(Of T, TKey)), Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.#ctor*
  name: VirtualGroupCondition
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.VirtualGroupCondition
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).New
  nameWithType: VirtualGroupCondition<T, TKey>.VirtualGroupCondition
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.Ascending
  name: Ascending
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2_Ascending
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.Ascending
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.Ascending
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).Ascending
  nameWithType: VirtualGroupCondition<T, TKey>.Ascending
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).Ascending
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.Ascending*
  name: Ascending
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2_Ascending_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.Ascending
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.Ascending
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).Ascending
  nameWithType: VirtualGroupCondition<T, TKey>.Ascending
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).Ascending
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.GroupBy
  name: GroupBy
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2_GroupBy
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.GroupBy
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.GroupBy
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).GroupBy
  nameWithType: VirtualGroupCondition<T, TKey>.GroupBy
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).GroupBy
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.GroupBy*
  name: GroupBy
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition-2.html#AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_2_GroupBy_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition`2.GroupBy
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, TKey>.GroupBy
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, TKey).GroupBy
  nameWithType: VirtualGroupCondition<T, TKey>.GroupBy
  nameWithType.vb: VirtualGroupCondition(Of T, TKey).GroupBy
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID
  name: VirtualID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID
  nameWithType: VirtualID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.#ctor
  name: VirtualID()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualID.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.VirtualID()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualID.New()
  nameWithType: VirtualID.VirtualID()
  nameWithType.vb: VirtualID.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.#ctor*
  name: VirtualID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualID.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.VirtualID
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualID.New
  nameWithType: VirtualID.VirtualID
  nameWithType.vb: VirtualID.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.ID
  name: ID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID_ID
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualID.ID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.ID
  nameWithType: VirtualID.ID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.ID*
  name: ID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID_ID_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualID.ID
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.ID
  nameWithType: VirtualID.ID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString()
  nameWithType: VirtualID.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualID.html#AkiraNetwork_VirtualStorageLibrary_VirtualID_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualID.ToString
  nameWithType: VirtualID.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem
  name: VirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem
  nameWithType: VirtualItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: VirtualItem(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualItem.VirtualItem(VirtualNodeName)
  nameWithType.vb: VirtualItem.New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  name: VirtualItem(VirtualNodeName, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  name.vb: New(VirtualNodeName, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date)
  nameWithType: VirtualItem.VirtualItem(VirtualNodeName, DateTime)
  nameWithType.vb: VirtualItem.New(VirtualNodeName, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name: VirtualItem(VirtualNodeName, DateTime, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_DateTime_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name.vb: New(VirtualNodeName, Date, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date, Date)
  nameWithType: VirtualItem.VirtualItem(VirtualNodeName, DateTime, DateTime)
  nameWithType.vb: VirtualItem.New(VirtualNodeName, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor*
  name: VirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.VirtualItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.New
  nameWithType: VirtualItem.VirtualItem
  nameWithType.vb: VirtualItem.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone(Boolean)
  nameWithType: VirtualItem.DeepClone(bool)
  nameWithType.vb: VirtualItem.DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem.DeepClone
  nameWithType: VirtualItem.DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1
  name: VirtualItemAdapter<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1
  name.vb: VirtualItemAdapter(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter(Of T)
  nameWithType: VirtualItemAdapter<T>
  nameWithType.vb: VirtualItemAdapter(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name: VirtualItemAdapter(VirtualStorage<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItemAdapter_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualStorage__0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name.vb: New(VirtualStorage(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter<T>.VirtualItemAdapter(AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T))
  nameWithType: VirtualItemAdapter<T>.VirtualItemAdapter(VirtualStorage<T>)
  nameWithType.vb: VirtualItemAdapter(Of T).New(VirtualStorage(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.#ctor*
  name: VirtualItemAdapter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItemAdapter_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter<T>.VirtualItemAdapter
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter(Of T).New
  nameWithType: VirtualItemAdapter<T>.VirtualItemAdapter
  nameWithType.vb: VirtualItemAdapter(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: this[VirtualPath, bool]
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItemAdapter_1_Item_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: this[](VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter<T>.this[AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool]
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter(Of T).this[](AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualItemAdapter<T>.this[VirtualPath, bool]
  nameWithType.vb: VirtualItemAdapter(Of T).this[](VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.Item*
  name: this
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItemAdapter_1_Item_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter<T>.this
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItemAdapter(Of T).this[]
  nameWithType: VirtualItemAdapter<T>.this
  nameWithType.vb: VirtualItemAdapter(Of T).this[]
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  name: VirtualItem<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1
  name.vb: VirtualItem(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T)
  nameWithType: VirtualItem<T>
  nameWithType.vb: VirtualItem(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  name: VirtualItem()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New()
  nameWithType: VirtualItem<T>.VirtualItem()
  nameWithType.vb: VirtualItem(Of T).New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: VirtualItem(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName)
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)
  name: VirtualItem(VirtualNodeName, T?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__0_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0)
  name.vb: New(VirtualNodeName, T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?)
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)
  name: VirtualItem(VirtualNodeName, T?, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__0_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime)
  name.vb: New(VirtualNodeName, T, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T, Date)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?, DateTime)
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)
  name: VirtualItem(VirtualNodeName, T?, DateTime, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__0_System_DateTime_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0,System.DateTime,System.DateTime)
  name.vb: New(VirtualNodeName, T, Date, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T?, System.DateTime, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, T, Date, Date)
  nameWithType: VirtualItem<T>.VirtualItem(VirtualNodeName, T?, DateTime, DateTime)
  nameWithType.vb: VirtualItem(Of T).New(VirtualNodeName, T, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor*
  name: VirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.VirtualItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).New
  nameWithType: VirtualItem<T>.VirtualItem
  nameWithType.vb: VirtualItem(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).DeepClone(Boolean)
  nameWithType: VirtualItem<T>.DeepClone(bool)
  nameWithType.vb: VirtualItem(Of T).DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.DeepClone
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).DeepClone
  nameWithType: VirtualItem<T>.DeepClone
  nameWithType.vb: VirtualItem(Of T).DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  name: Dispose()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Dispose
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose()
  nameWithType: VirtualItem<T>.Dispose()
  nameWithType.vb: VirtualItem(Of T).Dispose()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Dispose_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose(Boolean)
  nameWithType: VirtualItem<T>.Dispose(bool)
  nameWithType.vb: VirtualItem(Of T).Dispose(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose*
  name: Dispose
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Dispose_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Dispose
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Dispose
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Dispose
  nameWithType: VirtualItem<T>.Dispose
  nameWithType.vb: VirtualItem(Of T).Dispose
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  name: ~VirtualItem()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Finalize
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  name.vb: ''
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.~VirtualItem()
  fullName.vb: ''
  nameWithType: VirtualItem<T>.~VirtualItem()
  nameWithType.vb: ''
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize*
  name: ~VirtualItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Finalize_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Finalize
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.~VirtualItem
  nameWithType: VirtualItem<T>.~VirtualItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  name: ItemData
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ItemData
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ItemData
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ItemData
  nameWithType: VirtualItem<T>.ItemData
  nameWithType.vb: VirtualItem(Of T).ItemData
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData*
  name: ItemData
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ItemData_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ItemData
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ItemData
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ItemData
  nameWithType: VirtualItem<T>.ItemData
  nameWithType.vb: VirtualItem(Of T).ItemData
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.NodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).NodeType
  nameWithType: VirtualItem<T>.NodeType
  nameWithType.vb: VirtualItem(Of T).NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType*
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_NodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.NodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.NodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).NodeType
  nameWithType: VirtualItem<T>.NodeType
  nameWithType.vb: VirtualItem(Of T).NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ToString()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ToString()
  nameWithType: VirtualItem<T>.ToString()
  nameWithType.vb: VirtualItem(Of T).ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.ToString
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).ToString
  nameWithType: VirtualItem<T>.ToString
  nameWithType.vb: VirtualItem(Of T).ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: Update(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualItem<T>.Update(VirtualNode)
  nameWithType.vb: VirtualItem(Of T).Update(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update*
  name: Update
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_Update_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.Update
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.Update
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).Update
  nameWithType: VirtualItem<T>.Update
  nameWithType.vb: VirtualItem(Of T).Update
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  name: implicit operator VirtualItem<T>((VirtualNodeName nodeName, T? itemData))
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_op_Implicit_System_ValueTuple_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__0___AkiraNetwork_VirtualStorageLibrary_VirtualItem__0_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,`0})~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  name.vb: CType((nodeName As VirtualNodeName, itemData As T))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>((AkiraNetwork.VirtualStorageLibrary.VirtualNodeName nodeName, T? itemData))
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType((nodeName As AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, itemData As T))
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>((VirtualNodeName nodeName, T? itemData))
  nameWithType.vb: VirtualItem(Of T).CType((nodeName As VirtualNodeName, itemData As T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  name: implicit operator VirtualItem<T>(T?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_op_Implicit__0__AkiraNetwork_VirtualStorageLibrary_VirtualItem__0_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit(`0)~AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0}
  name.vb: CType(T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>(T?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType(T)
  nameWithType: VirtualItem<T>.implicit operator VirtualItem<T>(T?)
  nameWithType.vb: VirtualItem(Of T).CType(T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit*
  name: implicit operator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualItem-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualItem_1_op_Implicit_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualItem`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>.implicit operator
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T).CType
  nameWithType: VirtualItem<T>.implicit operator
  nameWithType.vb: VirtualItem(Of T).CType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  name: VirtualNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode
  nameWithType: VirtualNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: VirtualNode(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName)
  nameWithType.vb: VirtualNode.New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  name: VirtualNode(VirtualNodeName, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime)
  name.vb: New(VirtualNodeName, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName, DateTime)
  nameWithType.vb: VirtualNode.New(VirtualNodeName, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name: VirtualNode(VirtualNodeName, DateTime, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_DateTime_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.DateTime,System.DateTime)
  name.vb: New(VirtualNodeName, Date, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, System.DateTime, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Date, Date)
  nameWithType: VirtualNode.VirtualNode(VirtualNodeName, DateTime, DateTime)
  nameWithType.vb: VirtualNode.New(VirtualNodeName, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor*
  name: VirtualNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VirtualNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.New
  nameWithType: VirtualNode.VirtualNode
  nameWithType.vb: VirtualNode.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  name: CreatedDate
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_CreatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  nameWithType: VirtualNode.CreatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate*
  name: CreatedDate
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_CreatedDate_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.CreatedDate
  nameWithType: VirtualNode.CreatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone(Boolean)
  nameWithType: VirtualNode.DeepClone(bool)
  nameWithType.vb: VirtualNode.DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.DeepClone
  nameWithType: VirtualNode.DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  name: IsReferencedInStorage
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_IsReferencedInStorage
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  nameWithType: VirtualNode.IsReferencedInStorage
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage*
  name: IsReferencedInStorage
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_IsReferencedInStorage_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.IsReferencedInStorage
  nameWithType: VirtualNode.IsReferencedInStorage
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  name: Name
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Name
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  nameWithType: VirtualNode.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name*
  name: Name
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Name_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Name
  nameWithType: VirtualNode.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  nameWithType: VirtualNode.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType*
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_NodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.NodeType
  nameWithType: VirtualNode.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: Update(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualNode.Update(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update*
  name: Update
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_Update_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.Update
  nameWithType: VirtualNode.Update
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  name: UpdatedDate
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_UpdatedDate
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  nameWithType: VirtualNode.UpdatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate*
  name: UpdatedDate
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_UpdatedDate_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.UpdatedDate
  nameWithType: VirtualNode.UpdatedDate
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  name: VID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_VID
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  nameWithType: VirtualNode.VID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID*
  name: VID
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNode.html#AkiraNetwork_VirtualStorageLibrary_VirtualNode_VID_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNode.VID
  nameWithType: VirtualNode.VID
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  name: VirtualNodeContext
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext
  nameWithType: VirtualNodeContext
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name: VirtualNodeContext(VirtualNode?, VirtualPath, VirtualDirectory?, int, int, VirtualPath?, bool, VirtualSymbolicLink?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_System_Int32_System_Int32_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name.vb: New(VirtualNode, VirtualPath, VirtualDirectory, Integer, Integer, VirtualPath, Boolean, VirtualSymbolicLink)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.VirtualNodeContext(AkiraNetwork.VirtualStorageLibrary.VirtualNode?, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory?, int, int, AkiraNetwork.VirtualStorageLibrary.VirtualPath?, bool, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.New(AkiraNetwork.VirtualStorageLibrary.VirtualNode, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, Integer, Integer, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  nameWithType: VirtualNodeContext.VirtualNodeContext(VirtualNode?, VirtualPath, VirtualDirectory?, int, int, VirtualPath?, bool, VirtualSymbolicLink?)
  nameWithType.vb: VirtualNodeContext.New(VirtualNode, VirtualPath, VirtualDirectory, Integer, Integer, VirtualPath, Boolean, VirtualSymbolicLink)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor*
  name: VirtualNodeContext
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.VirtualNodeContext
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.New
  nameWithType: VirtualNodeContext.VirtualNodeContext
  nameWithType.vb: VirtualNodeContext.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  name: Depth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Depth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  nameWithType: VirtualNodeContext.Depth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth*
  name: Depth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Depth_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Depth
  nameWithType: VirtualNodeContext.Depth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  name: Index
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Index
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  nameWithType: VirtualNodeContext.Index
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index*
  name: Index
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Index_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Index
  nameWithType: VirtualNodeContext.Index
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  name: Node
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Node
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  nameWithType: VirtualNodeContext.Node
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node*
  name: Node
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Node_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Node
  nameWithType: VirtualNodeContext.Node
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  name: ParentDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ParentDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  nameWithType: VirtualNodeContext.ParentDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory*
  name: ParentDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ParentDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ParentDirectory
  nameWithType: VirtualNodeContext.ParentDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  name: Resolved
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Resolved
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  nameWithType: VirtualNodeContext.Resolved
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved*
  name: Resolved
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_Resolved_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.Resolved
  nameWithType: VirtualNodeContext.Resolved
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  name: ResolvedLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  nameWithType: VirtualNodeContext.ResolvedLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink*
  name: ResolvedLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedLink
  nameWithType: VirtualNodeContext.ResolvedLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  name: ResolvedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  nameWithType: VirtualNodeContext.ResolvedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath*
  name: ResolvedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ResolvedPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ResolvedPath
  nameWithType: VirtualNodeContext.ResolvedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString()
  nameWithType: VirtualNodeContext.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.ToString
  nameWithType: VirtualNodeContext.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  name: TraversalPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_TraversalPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  nameWithType: VirtualNodeContext.TraversalPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath*
  name: TraversalPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext_TraversalPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext.TraversalPath
  nameWithType: VirtualNodeContext.TraversalPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  name: VirtualNodeExtensions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions
  nameWithType: VirtualNodeExtensions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: ResolveNodeType(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualNodeExtensions.ResolveNodeType(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType*
  name: ResolveNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeExtensions_ResolveNodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeExtensions.ResolveNodeType
  nameWithType: VirtualNodeExtensions.ResolveNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
  name: VirtualNodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions
  nameWithType: VirtualNodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor
  name: VirtualNodeListConditions()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.VirtualNodeListConditions()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.New()
  nameWithType: VirtualNodeListConditions.VirtualNodeListConditions()
  nameWithType.vb: VirtualNodeListConditions.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode}})
  name: VirtualNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition<VirtualNode, object>?, List<VirtualSortCondition<VirtualNode>>?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_AkiraNetwork_VirtualStorageLibrary_VirtualNode_System_Object__System_Collections_Generic_List_AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_AkiraNetwork_VirtualStorageLibrary_VirtualNode___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode}})
  name.vb: New(VirtualNodeTypeFilter, VirtualGroupCondition(Of VirtualNode, Object), List(Of VirtualSortCondition(Of VirtualNode)))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.VirtualNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<AkiraNetwork.VirtualStorageLibrary.VirtualNode, object>?, System.Collections.Generic.List<AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<AkiraNetwork.VirtualStorageLibrary.VirtualNode>>?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode, Object), System.Collections.Generic.List(Of AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode)))
  nameWithType: VirtualNodeListConditions.VirtualNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition<VirtualNode, object>?, List<VirtualSortCondition<VirtualNode>>?)
  nameWithType.vb: VirtualNodeListConditions.New(VirtualNodeTypeFilter, VirtualGroupCondition(Of VirtualNode, Object), List(Of VirtualSortCondition(Of VirtualNode)))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor*
  name: VirtualNodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.VirtualNodeListConditions
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.New
  nameWithType: VirtualNodeListConditions.VirtualNodeListConditions
  nameWithType.vb: VirtualNodeListConditions.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter
  name: Filter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_Filter
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter
  nameWithType: VirtualNodeListConditions.Filter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter*
  name: Filter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_Filter_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.Filter
  nameWithType: VirtualNodeListConditions.Filter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition
  name: GroupCondition
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_GroupCondition
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition
  nameWithType: VirtualNodeListConditions.GroupCondition
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition*
  name: GroupCondition
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_GroupCondition_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.GroupCondition
  nameWithType: VirtualNodeListConditions.GroupCondition
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions
  name: SortConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_SortConditions
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions
  nameWithType: VirtualNodeListConditions.SortConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions*
  name: SortConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_SortConditions_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions.SortConditions
  nameWithType: VirtualNodeListConditions.SortConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  name: VirtualNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  nameWithType: VirtualNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor(System.String)
  name: VirtualNodeName(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__ctor_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor(System.String)
  name.vb: New(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.VirtualNodeName(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.New(String)
  nameWithType: VirtualNodeName.VirtualNodeName(string)
  nameWithType.vb: VirtualNodeName.New(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor*
  name: VirtualNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.VirtualNodeName
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.New
  nameWithType: VirtualNodeName.VirtualNodeName
  nameWithType.vb: VirtualNodeName.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: CompareTo(VirtualNodeName?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_CompareTo_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: CompareTo(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.CompareTo(VirtualNodeName?)
  nameWithType.vb: VirtualNodeName.CompareTo(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(System.Object)
  name: CompareTo(object?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_CompareTo_System_Object_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(System.Object)
  name.vb: CompareTo(Object)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(object?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo(Object)
  nameWithType: VirtualNodeName.CompareTo(object?)
  nameWithType.vb: VirtualNodeName.CompareTo(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo*
  name: CompareTo
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_CompareTo_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CompareTo
  nameWithType: VirtualNodeName.CompareTo
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: Equals(VirtualNodeName?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Equals_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: Equals(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.Equals(VirtualNodeName?)
  nameWithType.vb: VirtualNodeName.Equals(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(System.Object)
  name: Equals(object?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Equals_System_Object_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(object?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals(Object)
  nameWithType: VirtualNodeName.Equals(object?)
  nameWithType.vb: VirtualNodeName.Equals(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals*
  name: Equals
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Equals_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Equals
  nameWithType: VirtualNodeName.Equals
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  name: GenerateNodeName(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(System.String)
  name.vb: GenerateNodeName(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName(String)
  nameWithType: VirtualNodeName.GenerateNodeName(string)
  nameWithType.vb: VirtualNodeName.GenerateNodeName(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName*
  name: GenerateNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GenerateNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GenerateNodeName
  nameWithType: VirtualNodeName.GenerateNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  name: GetHashCode()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GetHashCode
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode()
  nameWithType: VirtualNodeName.GetHashCode()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode*
  name: GetHashCode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_GetHashCode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.GetHashCode
  nameWithType: VirtualNodeName.GetHashCode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  name: IsRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  nameWithType: VirtualNodeName.IsRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot*
  name: IsRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsRoot
  nameWithType: VirtualNodeName.IsRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: IsValidNodeName(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsValidNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.IsValidNodeName(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName*
  name: IsValidNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_IsValidNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.IsValidNodeName
  nameWithType: VirtualNodeName.IsValidNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  name: Name
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Name
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  nameWithType: VirtualNodeName.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name*
  name: Name
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_Name_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.Name
  nameWithType: VirtualNodeName.Name
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  name: ResetCounter()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ResetCounter
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter()
  nameWithType: VirtualNodeName.ResetCounter()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter*
  name: ResetCounter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ResetCounter_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ResetCounter
  nameWithType: VirtualNodeName.ResetCounter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString()
  nameWithType: VirtualNodeName.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.ToString
  nameWithType: VirtualNodeName.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: operator ==(VirtualNodeName?, VirtualNodeName?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Equality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: =(VirtualNodeName, VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator ==(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.=(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.operator ==(VirtualNodeName?, VirtualNodeName?)
  nameWithType.vb: VirtualNodeName.=(VirtualNodeName, VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality*
  name: operator ==
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Equality_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator ==
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.=
  nameWithType: VirtualNodeName.operator ==
  nameWithType.vb: VirtualNodeName.=
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  name: implicit operator string(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Implicit_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__System_String
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)~System.String
  name.vb: CType(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator string(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.implicit operator string(VirtualNodeName)
  nameWithType.vb: VirtualNodeName.CType(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  name: implicit operator VirtualNodeName(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Implicit_System_String__AkiraNetwork_VirtualStorageLibrary_VirtualNodeName
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualNodeName
  name.vb: CType(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualNodeName(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType(String)
  nameWithType: VirtualNodeName.implicit operator VirtualNodeName(string)
  nameWithType.vb: VirtualNodeName.CType(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit*
  name: implicit operator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Implicit_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.implicit operator
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.CType
  nameWithType: VirtualNodeName.implicit operator
  nameWithType.vb: VirtualNodeName.CType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: operator !=(VirtualNodeName?, VirtualNodeName?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Inequality_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: <>(VirtualNodeName, VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator !=(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.<>(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualNodeName.operator !=(VirtualNodeName?, VirtualNodeName?)
  nameWithType.vb: VirtualNodeName.<>(VirtualNodeName, VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality*
  name: operator !=
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_op_Inequality_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.operator !=
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeName.<>
  nameWithType: VirtualNodeName.operator !=
  nameWithType.vb: VirtualNodeName.<>
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException
  name: VirtualNodeNotFoundException
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException
  nameWithType: VirtualNodeNotFoundException
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor
  name: VirtualNodeNotFoundException()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeNotFoundException__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.VirtualNodeNotFoundException()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.New()
  nameWithType: VirtualNodeNotFoundException.VirtualNodeNotFoundException()
  nameWithType.vb: VirtualNodeNotFoundException.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor(System.String)
  name: VirtualNodeNotFoundException(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeNotFoundException__ctor_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor(System.String)
  name.vb: New(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.VirtualNodeNotFoundException(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.New(String)
  nameWithType: VirtualNodeNotFoundException.VirtualNodeNotFoundException(string)
  nameWithType.vb: VirtualNodeNotFoundException.New(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor(System.String,System.Exception)
  name: VirtualNodeNotFoundException(string, Exception)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeNotFoundException__ctor_System_String_System_Exception_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.VirtualNodeNotFoundException(string, System.Exception)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.New(String, System.Exception)
  nameWithType: VirtualNodeNotFoundException.VirtualNodeNotFoundException(string, Exception)
  nameWithType.vb: VirtualNodeNotFoundException.New(String, Exception)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor*
  name: VirtualNodeNotFoundException
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeNotFoundException__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.VirtualNodeNotFoundException
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualNodeNotFoundException.New
  nameWithType: VirtualNodeNotFoundException.VirtualNodeNotFoundException
  nameWithType.vb: VirtualNodeNotFoundException.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  name: VirtualNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType
  nameWithType: VirtualNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Directory
  name: Directory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeType_Directory
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Directory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Directory
  nameWithType: VirtualNodeType.Directory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Item
  name: Item
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeType_Item
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Item
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.Item
  nameWithType: VirtualNodeType.Item
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.None
  name: None
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeType_None
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.None
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.None
  nameWithType: VirtualNodeType.None
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.SymbolicLink
  name: SymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeType_SymbolicLink
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.SymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeType.SymbolicLink
  nameWithType: VirtualNodeType.SymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter
  name: VirtualNodeTypeFilter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter
  nameWithType: VirtualNodeTypeFilter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.All
  name: All
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_All
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.All
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.All
  nameWithType: VirtualNodeTypeFilter.All
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Directory
  name: Directory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_Directory
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Directory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Directory
  nameWithType: VirtualNodeTypeFilter.Directory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Item
  name: Item
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_Item
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Item
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.Item
  nameWithType: VirtualNodeTypeFilter.Item
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.None
  name: None
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_None
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.None
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.None
  nameWithType: VirtualNodeTypeFilter.None
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.SymbolicLink
  name: SymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.html#AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_SymbolicLink
  commentId: F:AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.SymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter.SymbolicLink
  nameWithType: VirtualNodeTypeFilter.SymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath
  name: VirtualPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath
  nameWithType: VirtualPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor(System.Collections.Generic.IEnumerable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName})
  name: VirtualPath(IEnumerable<VirtualNodeName>)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath__ctor_System_Collections_Generic_IEnumerable_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor(System.Collections.Generic.IEnumerable{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName})
  name.vb: New(IEnumerable(Of VirtualNodeName))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.VirtualPath(System.Collections.Generic.IEnumerable<AkiraNetwork.VirtualStorageLibrary.VirtualNodeName>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.New(System.Collections.Generic.IEnumerable(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeName))
  nameWithType: VirtualPath.VirtualPath(IEnumerable<VirtualNodeName>)
  nameWithType.vb: VirtualPath.New(IEnumerable(Of VirtualNodeName))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor(System.String)
  name: VirtualPath(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath__ctor_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor(System.String)
  name.vb: New(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.VirtualPath(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.New(String)
  nameWithType: VirtualPath.VirtualPath(string)
  nameWithType.vb: VirtualPath.New(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor*
  name: VirtualPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.VirtualPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.New
  nameWithType: VirtualPath.VirtualPath
  nameWithType.vb: VirtualPath.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash
  name: AddEndSlash()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_AddEndSlash
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash()
  nameWithType: VirtualPath.AddEndSlash()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash*
  name: AddEndSlash
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_AddEndSlash_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddEndSlash
  nameWithType: VirtualPath.AddEndSlash
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash
  name: AddStartSlash()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_AddStartSlash
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash()
  nameWithType: VirtualPath.AddStartSlash()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash*
  name: AddStartSlash
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_AddStartSlash_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.AddStartSlash
  nameWithType: VirtualPath.AddStartSlash
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: ArePathsSubdirectories(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_ArePathsSubdirectories_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.ArePathsSubdirectories(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories*
  name: ArePathsSubdirectories
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_ArePathsSubdirectories_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ArePathsSubdirectories
  nameWithType: VirtualPath.ArePathsSubdirectories
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(AkiraNetwork.VirtualStorageLibrary.VirtualPath[])
  name: Combine(params VirtualPath[])
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Combine_AkiraNetwork_VirtualStorageLibrary_VirtualPath___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(AkiraNetwork.VirtualStorageLibrary.VirtualPath[])
  name.vb: Combine(ParamArray VirtualPath())
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(params AkiraNetwork.VirtualStorageLibrary.VirtualPath[])
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(ParamArray AkiraNetwork.VirtualStorageLibrary.VirtualPath())
  nameWithType: VirtualPath.Combine(params VirtualPath[])
  nameWithType.vb: VirtualPath.Combine(ParamArray VirtualPath())
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(System.String[])
  name: Combine(params string[])
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Combine_System_String___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(System.String[])
  name.vb: Combine(ParamArray String())
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(params string[])
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine(ParamArray String())
  nameWithType: VirtualPath.Combine(params string[])
  nameWithType.vb: VirtualPath.Combine(ParamArray String())
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine*
  name: Combine
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Combine_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Combine
  nameWithType: VirtualPath.Combine
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Int32)
  name: CombineFromIndex(VirtualPath, int)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_CombineFromIndex_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Int32_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Int32)
  name.vb: CombineFromIndex(VirtualPath, Integer)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex(AkiraNetwork.VirtualStorageLibrary.VirtualPath, int)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Integer)
  nameWithType: VirtualPath.CombineFromIndex(VirtualPath, int)
  nameWithType.vb: VirtualPath.CombineFromIndex(VirtualPath, Integer)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex*
  name: CombineFromIndex
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_CombineFromIndex_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CombineFromIndex
  nameWithType: VirtualPath.CombineFromIndex
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: CompareTo(VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_CompareTo_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: CompareTo(VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.CompareTo(VirtualPath?)
  nameWithType.vb: VirtualPath.CompareTo(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(System.Object)
  name: CompareTo(object?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_CompareTo_System_Object_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(System.Object)
  name.vb: CompareTo(Object)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(object?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo(Object)
  nameWithType: VirtualPath.CompareTo(object?)
  nameWithType.vb: VirtualPath.CompareTo(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo*
  name: CompareTo
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_CompareTo_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CompareTo
  nameWithType: VirtualPath.CompareTo
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth
  name: Depth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Depth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth
  nameWithType: VirtualPath.Depth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth*
  name: Depth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Depth_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Depth
  nameWithType: VirtualPath.Depth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath
  name: DirectoryPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_DirectoryPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath
  nameWithType: VirtualPath.DirectoryPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath*
  name: DirectoryPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_DirectoryPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DirectoryPath
  nameWithType: VirtualPath.DirectoryPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot
  name: Dot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Dot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot
  nameWithType: VirtualPath.Dot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot*
  name: Dot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Dot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Dot
  nameWithType: VirtualPath.Dot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot
  name: DotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_DotDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot
  nameWithType: VirtualPath.DotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot*
  name: DotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_DotDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.DotDot
  nameWithType: VirtualPath.DotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: Equals(VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Equals_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: Equals(VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.Equals(VirtualPath?)
  nameWithType.vb: VirtualPath.Equals(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(System.Object)
  name: Equals(object?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Equals_System_Object_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(object?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals(Object)
  nameWithType: VirtualPath.Equals(object?)
  nameWithType.vb: VirtualPath.Equals(Object)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals*
  name: Equals
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Equals_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Equals
  nameWithType: VirtualPath.Equals
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth
  name: FixedDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_FixedDepth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth
  nameWithType: VirtualPath.FixedDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth*
  name: FixedDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_FixedDepth_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedDepth
  nameWithType: VirtualPath.FixedDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath
  name: FixedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_FixedPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath
  nameWithType: VirtualPath.FixedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath*
  name: FixedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_FixedPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.FixedPath
  nameWithType: VirtualPath.FixedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode
  name: GetHashCode()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetHashCode
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode()
  nameWithType: VirtualPath.GetHashCode()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode*
  name: GetHashCode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetHashCode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetHashCode
  nameWithType: VirtualPath.GetHashCode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName
  name: GetNodeName()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetNodeName
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName()
  nameWithType: VirtualPath.GetNodeName()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName*
  name: GetNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetNodeName
  nameWithType: VirtualPath.GetNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath
  name: GetParentPath()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetParentPath
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath()
  nameWithType: VirtualPath.GetParentPath()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath*
  name: GetParentPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetParentPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetParentPath
  nameWithType: VirtualPath.GetParentPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList
  name: GetPartsLinkedList()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetPartsLinkedList
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList()
  nameWithType: VirtualPath.GetPartsLinkedList()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList*
  name: GetPartsLinkedList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetPartsLinkedList_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsLinkedList
  nameWithType: VirtualPath.GetPartsLinkedList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList
  name: GetPartsList()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetPartsList
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList()
  nameWithType: VirtualPath.GetPartsList()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList*
  name: GetPartsList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetPartsList_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetPartsList
  nameWithType: VirtualPath.GetPartsList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: GetRelativePath(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetRelativePath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.GetRelativePath(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath*
  name: GetRelativePath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_GetRelativePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.GetRelativePath
  nameWithType: VirtualPath.GetRelativePath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute
  name: IsAbsolute
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsAbsolute
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute
  nameWithType: VirtualPath.IsAbsolute
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute*
  name: IsAbsolute
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsAbsolute_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsAbsolute
  nameWithType: VirtualPath.IsAbsolute
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot
  name: IsDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot
  nameWithType: VirtualPath.IsDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot*
  name: IsDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDot
  nameWithType: VirtualPath.IsDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot
  name: IsDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsDotDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot
  nameWithType: VirtualPath.IsDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot*
  name: IsDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsDotDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsDotDot
  nameWithType: VirtualPath.IsDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty
  name: IsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsEmpty
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty
  nameWithType: VirtualPath.IsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty*
  name: IsEmpty
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsEmpty_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEmpty
  nameWithType: VirtualPath.IsEmpty
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash
  name: IsEndsWithSlash
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsEndsWithSlash
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash
  nameWithType: VirtualPath.IsEndsWithSlash
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash*
  name: IsEndsWithSlash
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsEndsWithSlash_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsEndsWithSlash
  nameWithType: VirtualPath.IsEndsWithSlash
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot
  name: IsRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot
  nameWithType: VirtualPath.IsRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot*
  name: IsRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsRoot
  nameWithType: VirtualPath.IsRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: IsSubdirectory(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsSubdirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.IsSubdirectory(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory*
  name: IsSubdirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_IsSubdirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.IsSubdirectory
  nameWithType: VirtualPath.IsSubdirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName
  name: NodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_NodeName
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName
  nameWithType: VirtualPath.NodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName*
  name: NodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_NodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NodeName
  nameWithType: VirtualPath.NodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath
  name: NormalizePath()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_NormalizePath
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath()
  nameWithType: VirtualPath.NormalizePath()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath(System.String)
  name: NormalizePath(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_NormalizePath_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath(System.String)
  name.vb: NormalizePath(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath(String)
  nameWithType: VirtualPath.NormalizePath(string)
  nameWithType.vb: VirtualPath.NormalizePath(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath*
  name: NormalizePath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_NormalizePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.NormalizePath
  nameWithType: VirtualPath.NormalizePath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList
  name: PartsList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_PartsList
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList
  nameWithType: VirtualPath.PartsList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList*
  name: PartsList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_PartsList_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.PartsList
  nameWithType: VirtualPath.PartsList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path
  name: Path
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Path
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path
  nameWithType: VirtualPath.Path
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path*
  name: Path
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Path_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Path
  nameWithType: VirtualPath.Path
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root
  name: Root
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Root
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root
  nameWithType: VirtualPath.Root
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root*
  name: Root
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Root_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Root
  nameWithType: VirtualPath.Root
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator
  name: Separator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Separator
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator
  nameWithType: VirtualPath.Separator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator*
  name: Separator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_Separator_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.Separator
  nameWithType: VirtualPath.Separator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: StartsWith(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_StartsWith_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.StartsWith(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith*
  name: StartsWith
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_StartsWith_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.StartsWith
  nameWithType: VirtualPath.StartsWith
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString()
  nameWithType: VirtualPath.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.ToString
  nameWithType: VirtualPath.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash
  name: TrimEndSlash()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_TrimEndSlash
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash()
  nameWithType: VirtualPath.TrimEndSlash()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash*
  name: TrimEndSlash
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_TrimEndSlash_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.TrimEndSlash
  nameWithType: VirtualPath.TrimEndSlash
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: operator +(VirtualPath, VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: +(VirtualPath, VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualPath.operator +(VirtualPath, VirtualNodeName)
  nameWithType.vb: VirtualPath.+(VirtualPath, VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: operator +(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: +(VirtualPath, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.operator +(VirtualPath, VirtualPath)
  nameWithType.vb: VirtualPath.+(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Char)
  name: operator +(VirtualPath, char)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Char_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Char)
  name.vb: +(VirtualPath, Char)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualPath, char)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Char)
  nameWithType: VirtualPath.operator +(VirtualPath, char)
  nameWithType.vb: VirtualPath.+(VirtualPath, Char)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.String)
  name: operator +(VirtualPath, string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.String)
  name.vb: +(VirtualPath, String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(AkiraNetwork.VirtualStorageLibrary.VirtualPath, string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(AkiraNetwork.VirtualStorageLibrary.VirtualPath, String)
  nameWithType: VirtualPath.operator +(VirtualPath, string)
  nameWithType.vb: VirtualPath.+(VirtualPath, String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(System.Char,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: operator +(char, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_System_Char_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(System.Char,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: +(Char, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(char, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(Char, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.operator +(char, VirtualPath)
  nameWithType.vb: VirtualPath.+(Char, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(System.String,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: operator +(string, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_System_String_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition(System.String,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: +(String, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +(string, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+(String, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.operator +(string, VirtualPath)
  nameWithType.vb: VirtualPath.+(String, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition*
  name: operator +
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Addition_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Addition
  isSpec: "True"
  name.vb: +
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator +
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.+
  nameWithType: VirtualPath.operator +
  nameWithType.vb: VirtualPath.+
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: operator ==(VirtualPath?, VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Equality_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Equality(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: =(VirtualPath, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator ==(AkiraNetwork.VirtualStorageLibrary.VirtualPath?, AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.=(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.operator ==(VirtualPath?, VirtualPath?)
  nameWithType.vb: VirtualPath.=(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Equality*
  name: operator ==
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Equality_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator ==
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.=
  nameWithType: VirtualPath.operator ==
  nameWithType.vb: VirtualPath.=
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualPath)~System.String
  name: implicit operator string(VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Implicit_AkiraNetwork_VirtualStorageLibrary_VirtualPath__System_String
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualPath)~System.String
  name.vb: CType(VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.implicit operator string(AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CType(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.implicit operator string(VirtualPath?)
  nameWithType.vb: VirtualPath.CType(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualPath
  name: implicit operator VirtualPath(string)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Implicit_System_String__AkiraNetwork_VirtualStorageLibrary_VirtualPath
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit(System.String)~AkiraNetwork.VirtualStorageLibrary.VirtualPath
  name.vb: CType(String)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualPath(string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CType(String)
  nameWithType: VirtualPath.implicit operator VirtualPath(string)
  nameWithType.vb: VirtualPath.CType(String)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit*
  name: implicit operator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Implicit_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.implicit operator
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.CType
  nameWithType: VirtualPath.implicit operator
  nameWithType.vb: VirtualPath.CType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: operator !=(VirtualPath?, VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Inequality_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Inequality(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: <>(VirtualPath, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator !=(AkiraNetwork.VirtualStorageLibrary.VirtualPath?, AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.<>(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualPath.operator !=(VirtualPath?, VirtualPath?)
  nameWithType.vb: VirtualPath.<>(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Inequality*
  name: operator !=
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualPath.html#AkiraNetwork_VirtualStorageLibrary_VirtualPath_op_Inequality_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualPath.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualPath.operator !=
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualPath.<>
  nameWithType: VirtualPath.operator !=
  nameWithType.vb: VirtualPath.<>
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1
  name: VirtualSortCondition<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1
  name.vb: VirtualSortCondition(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T)
  nameWithType: VirtualSortCondition<T>
  nameWithType.vb: VirtualSortCondition(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)
  name: VirtualSortCondition(Expression<Func<T, object>>, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Object___System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)
  name.vb: New(Expression(Of Func(Of T, Object)), Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.VirtualSortCondition(System.Linq.Expressions.Expression<System.Func<T, object>>, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).New(System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean)
  nameWithType: VirtualSortCondition<T>.VirtualSortCondition(Expression<Func<T, object>>, bool)
  nameWithType.vb: VirtualSortCondition(Of T).New(Expression(Of Func(Of T, Object)), Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.#ctor*
  name: VirtualSortCondition
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.VirtualSortCondition
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).New
  nameWithType: VirtualSortCondition<T>.VirtualSortCondition
  nameWithType.vb: VirtualSortCondition(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.Ascending
  name: Ascending
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1_Ascending
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.Ascending
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.Ascending
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).Ascending
  nameWithType: VirtualSortCondition<T>.Ascending
  nameWithType.vb: VirtualSortCondition(Of T).Ascending
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.Ascending*
  name: Ascending
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1_Ascending_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.Ascending
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.Ascending
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).Ascending
  nameWithType: VirtualSortCondition<T>.Ascending
  nameWithType.vb: VirtualSortCondition(Of T).Ascending
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.SortBy
  name: SortBy
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1_SortBy
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.SortBy
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.SortBy
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).SortBy
  nameWithType: VirtualSortCondition<T>.SortBy
  nameWithType.vb: VirtualSortCondition(Of T).SortBy
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.SortBy*
  name: SortBy
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_1_SortBy_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition`1.SortBy
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>.SortBy
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T).SortBy
  nameWithType: VirtualSortCondition<T>.SortBy
  nameWithType.vb: VirtualSortCondition(Of T).SortBy
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions
  name: VirtualStorageExtensions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions
  nameWithType: VirtualStorageExtensions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions*
  name: ApplySortConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageExtensions_ApplySortConditions_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions
  nameWithType: VirtualStorageExtensions.ApplySortConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{``0}})
  name: ApplySortConditions<T>(IEnumerable<T>, List<VirtualSortCondition<T>>?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageExtensions_ApplySortConditions__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_List_AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition___0___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{``0}})
  name.vb: ApplySortConditions(Of T)(IEnumerable(Of T), List(Of VirtualSortCondition(Of T)))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.List<AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>>?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.ApplySortConditions(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.List(Of AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T)))
  nameWithType: VirtualStorageExtensions.ApplySortConditions<T>(IEnumerable<T>, List<VirtualSortCondition<T>>?)
  nameWithType.vb: VirtualStorageExtensions.ApplySortConditions(Of T)(IEnumerable(Of T), List(Of VirtualSortCondition(Of T)))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort*
  name: GroupAndSort
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageExtensions_GroupAndSort_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort
  nameWithType: VirtualStorageExtensions.GroupAndSort
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort``1(System.Collections.Generic.IEnumerable{``0},AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{``0,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{``0}})
  name: GroupAndSort<T>(IEnumerable<T>, VirtualGroupCondition<T, object>?, List<VirtualSortCondition<T>>?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageExtensions_GroupAndSort__1_System_Collections_Generic_IEnumerable___0__AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition___0_System_Object__System_Collections_Generic_List_AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition___0___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort``1(System.Collections.Generic.IEnumerable{``0},AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{``0,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{``0}})
  name.vb: GroupAndSort(Of T)(IEnumerable(Of T), VirtualGroupCondition(Of T, Object), List(Of VirtualSortCondition(Of T)))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort<T>(System.Collections.Generic.IEnumerable<T>, AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<T, object>?, System.Collections.Generic.List<AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<T>>?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorageExtensions.GroupAndSort(Of T)(System.Collections.Generic.IEnumerable(Of T), AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of T, Object), System.Collections.Generic.List(Of AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of T)))
  nameWithType: VirtualStorageExtensions.GroupAndSort<T>(IEnumerable<T>, VirtualGroupCondition<T, object>?, List<VirtualSortCondition<T>>?)
  nameWithType.vb: VirtualStorageExtensions.GroupAndSort(Of T)(IEnumerable(Of T), VirtualGroupCondition(Of T, Object), List(Of VirtualSortCondition(Of T)))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  name: VirtualStorageSettings
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings
  nameWithType: VirtualStorageSettings
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  name: Initialize()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Initialize
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize()
  nameWithType: VirtualStorageSettings.Initialize()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize*
  name: Initialize
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Initialize_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Initialize
  nameWithType: VirtualStorageSettings.Initialize
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  name: InvalidNodeNameCharacters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNameCharacters
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  nameWithType: VirtualStorageSettings.InvalidNodeNameCharacters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters*
  name: InvalidNodeNameCharacters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNameCharacters_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNameCharacters
  nameWithType: VirtualStorageSettings.InvalidNodeNameCharacters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  name: InvalidNodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNames
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  nameWithType: VirtualStorageSettings.InvalidNodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames*
  name: InvalidNodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_InvalidNodeNames_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.InvalidNodeNames
  nameWithType: VirtualStorageSettings.InvalidNodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  name: NodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_NodeListConditions
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  nameWithType: VirtualStorageSettings.NodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions*
  name: NodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_NodeListConditions_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.NodeListConditions
  nameWithType: VirtualStorageSettings.NodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  name: PathDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  nameWithType: VirtualStorageSettings.PathDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot*
  name: PathDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDot
  nameWithType: VirtualStorageSettings.PathDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  name: PathDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDotDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  nameWithType: VirtualStorageSettings.PathDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot*
  name: PathDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathDotDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathDotDot
  nameWithType: VirtualStorageSettings.PathDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  name: PathRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  nameWithType: VirtualStorageSettings.PathRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot*
  name: PathRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathRoot
  nameWithType: VirtualStorageSettings.PathRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  name: PathSeparator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathSeparator
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  nameWithType: VirtualStorageSettings.PathSeparator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator*
  name: PathSeparator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PathSeparator_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PathSeparator
  nameWithType: VirtualStorageSettings.PathSeparator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  name: PrefixDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  nameWithType: VirtualStorageSettings.PrefixDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory*
  name: PrefixDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixDirectory
  nameWithType: VirtualStorageSettings.PrefixDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  name: PrefixItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixItem
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  nameWithType: VirtualStorageSettings.PrefixItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem*
  name: PrefixItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixItem
  nameWithType: VirtualStorageSettings.PrefixItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  name: PrefixSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  nameWithType: VirtualStorageSettings.PrefixSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink*
  name: PrefixSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_PrefixSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.PrefixSymbolicLink
  nameWithType: VirtualStorageSettings.PrefixSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  name: Settings
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Settings
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  nameWithType: VirtualStorageSettings.Settings
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings*
  name: Settings
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_Settings_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.Settings
  nameWithType: VirtualStorageSettings.Settings
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  name: WildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_WildcardMatcher
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  nameWithType: VirtualStorageSettings.WildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher*
  name: WildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageSettings_WildcardMatcher_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageSettings.WildcardMatcher
  nameWithType: VirtualStorageSettings.WildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState
  name: VirtualStorageState
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState
  nameWithType: VirtualStorageState
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters
  name: InvalidNodeNameCharacters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_InvalidNodeNameCharacters
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters
  nameWithType: VirtualStorageState.InvalidNodeNameCharacters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters*
  name: InvalidNodeNameCharacters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_InvalidNodeNameCharacters_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNameCharacters
  nameWithType: VirtualStorageState.InvalidNodeNameCharacters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames
  name: InvalidNodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_InvalidNodeNames
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames
  nameWithType: VirtualStorageState.InvalidNodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames*
  name: InvalidNodeNames
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_InvalidNodeNames_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.InvalidNodeNames
  nameWithType: VirtualStorageState.InvalidNodeNames
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions
  name: NodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_NodeListConditions
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions
  nameWithType: VirtualStorageState.NodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions*
  name: NodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_NodeListConditions_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.NodeListConditions
  nameWithType: VirtualStorageState.NodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot
  name: PathDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot
  nameWithType: VirtualStorageState.PathDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot*
  name: PathDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDot
  nameWithType: VirtualStorageState.PathDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot
  name: PathDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathDotDot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot
  nameWithType: VirtualStorageState.PathDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot*
  name: PathDotDot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathDotDot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathDotDot
  nameWithType: VirtualStorageState.PathDotDot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot
  name: PathRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathRoot
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot
  nameWithType: VirtualStorageState.PathRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot*
  name: PathRoot
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathRoot_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathRoot
  nameWithType: VirtualStorageState.PathRoot
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator
  name: PathSeparator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathSeparator
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator
  nameWithType: VirtualStorageState.PathSeparator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator*
  name: PathSeparator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PathSeparator_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PathSeparator
  nameWithType: VirtualStorageState.PathSeparator
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory
  name: PrefixDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory
  nameWithType: VirtualStorageState.PrefixDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory*
  name: PrefixDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixDirectory
  nameWithType: VirtualStorageState.PrefixDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem
  name: PrefixItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixItem
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem
  nameWithType: VirtualStorageState.PrefixItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem*
  name: PrefixItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixItem
  nameWithType: VirtualStorageState.PrefixItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink
  name: PrefixSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixSymbolicLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink
  nameWithType: VirtualStorageState.PrefixSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink*
  name: PrefixSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_PrefixSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.PrefixSymbolicLink
  nameWithType: VirtualStorageState.PrefixSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions)
  name: SetNodeListConditions(VirtualNodeListConditions)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_SetNodeListConditions_AkiraNetwork_VirtualStorageLibrary_VirtualNodeListConditions_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeListConditions)
  nameWithType: VirtualStorageState.SetNodeListConditions(VirtualNodeListConditions)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode}})
  name: SetNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition<VirtualNode, object>?, List<VirtualSortCondition<VirtualNode>>?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_SetNodeListConditions_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_AkiraNetwork_VirtualStorageLibrary_VirtualGroupCondition_AkiraNetwork_VirtualStorageLibrary_VirtualNode_System_Object__System_Collections_Generic_List_AkiraNetwork_VirtualStorageLibrary_VirtualSortCondition_AkiraNetwork_VirtualStorageLibrary_VirtualNode___
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Object},System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition{AkiraNetwork.VirtualStorageLibrary.VirtualNode}})
  name.vb: SetNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition(Of VirtualNode, Object), List(Of VirtualSortCondition(Of VirtualNode)))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition<AkiraNetwork.VirtualStorageLibrary.VirtualNode, object>?, System.Collections.Generic.List<AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition<AkiraNetwork.VirtualStorageLibrary.VirtualNode>>?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, AkiraNetwork.VirtualStorageLibrary.VirtualGroupCondition(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode, Object), System.Collections.Generic.List(Of AkiraNetwork.VirtualStorageLibrary.VirtualSortCondition(Of AkiraNetwork.VirtualStorageLibrary.VirtualNode)))
  nameWithType: VirtualStorageState.SetNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition<VirtualNode, object>?, List<VirtualSortCondition<VirtualNode>>?)
  nameWithType.vb: VirtualStorageState.SetNodeListConditions(VirtualNodeTypeFilter, VirtualGroupCondition(Of VirtualNode, Object), List(Of VirtualSortCondition(Of VirtualNode)))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions*
  name: SetNodeListConditions
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_SetNodeListConditions_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.SetNodeListConditions
  nameWithType: VirtualStorageState.SetNodeListConditions
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State
  name: State
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_State
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State
  nameWithType: VirtualStorageState.State
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State*
  name: State
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_State_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.State
  nameWithType: VirtualStorageState.State
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher
  name: WildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_WildcardMatcher
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher
  nameWithType: VirtualStorageState.WildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher*
  name: WildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorageState_WildcardMatcher_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorageState.WildcardMatcher
  nameWithType: VirtualStorageState.WildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1
  name: VirtualStorage<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1
  name.vb: VirtualStorage(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T)
  nameWithType: VirtualStorage<T>
  nameWithType.vb: VirtualStorage(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.#ctor
  name: VirtualStorage()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.VirtualStorage()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).New()
  nameWithType: VirtualStorage<T>.VirtualStorage()
  nameWithType.vb: VirtualStorage(Of T).New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.#ctor*
  name: VirtualStorage
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.VirtualStorage
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).New
  nameWithType: VirtualStorage<T>.VirtualStorage
  nameWithType.vb: VirtualStorage(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Boolean)
  name: AddDirectory(VirtualPath, VirtualDirectory, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Boolean)
  name.vb: AddDirectory(VirtualPath, VirtualDirectory, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, Boolean)
  nameWithType: VirtualStorage<T>.AddDirectory(VirtualPath, VirtualDirectory, bool)
  nameWithType.vb: VirtualStorage(Of T).AddDirectory(VirtualPath, VirtualDirectory, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: AddDirectory(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: AddDirectory(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.AddDirectory(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).AddDirectory(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory*
  name: AddDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddDirectory
  nameWithType: VirtualStorage<T>.AddDirectory
  nameWithType.vb: VirtualStorage(Of T).AddDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0},System.Boolean)
  name: AddItem(VirtualPath, VirtualItem<T>, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddItem_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualItem__0__System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0},System.Boolean)
  name.vb: AddItem(VirtualPath, VirtualItem(Of T), Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T), Boolean)
  nameWithType: VirtualStorage<T>.AddItem(VirtualPath, VirtualItem<T>, bool)
  nameWithType.vb: VirtualStorage(Of T).AddItem(VirtualPath, VirtualItem(Of T), Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,`0,System.Boolean)
  name: AddItem(VirtualPath, T?, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddItem_AkiraNetwork_VirtualStorageLibrary_VirtualPath__0_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,`0,System.Boolean)
  name.vb: AddItem(VirtualPath, T, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, T?, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, T, Boolean)
  nameWithType: VirtualStorage<T>.AddItem(VirtualPath, T?, bool)
  nameWithType.vb: VirtualStorage(Of T).AddItem(VirtualPath, T, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem*
  name: AddItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddItem
  nameWithType: VirtualStorage<T>.AddItem
  nameWithType.vb: VirtualStorage(Of T).AddItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddLinkToDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: AddLinkToDictionary(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddLinkToDictionary_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddLinkToDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddLinkToDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddLinkToDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.AddLinkToDictionary(VirtualPath, VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).AddLinkToDictionary(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddLinkToDictionary*
  name: AddLinkToDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddLinkToDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddLinkToDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddLinkToDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddLinkToDictionary
  nameWithType: VirtualStorage<T>.AddLinkToDictionary
  nameWithType.vb: VirtualStorage(Of T).AddLinkToDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Boolean)
  name: AddNode(VirtualPath, VirtualNode, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNode_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode,System.Boolean)
  name.vb: AddNode(VirtualPath, VirtualNode, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode, Boolean)
  nameWithType: VirtualStorage<T>.AddNode(VirtualPath, VirtualNode, bool)
  nameWithType.vb: VirtualStorage(Of T).AddNode(VirtualPath, VirtualNode, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddNode*
  name: AddNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddNode
  nameWithType: VirtualStorage<T>.AddNode
  nameWithType.vb: VirtualStorage(Of T).AddNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: AddSymbolicLink(VirtualPath, VirtualPath?, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: AddSymbolicLink(VirtualPath, VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath?, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.AddSymbolicLink(VirtualPath, VirtualPath?, bool)
  nameWithType.vb: VirtualStorage(Of T).AddSymbolicLink(VirtualPath, VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink,System.Boolean)
  name: AddSymbolicLink(VirtualPath, VirtualSymbolicLink, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink,System.Boolean)
  name.vb: AddSymbolicLink(VirtualPath, VirtualSymbolicLink, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink, Boolean)
  nameWithType: VirtualStorage<T>.AddSymbolicLink(VirtualPath, VirtualSymbolicLink, bool)
  nameWithType.vb: VirtualStorage(Of T).AddSymbolicLink(VirtualPath, VirtualSymbolicLink, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink*
  name: AddSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_AddSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.AddSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.AddSymbolicLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).AddSymbolicLink
  nameWithType: VirtualStorage<T>.AddSymbolicLink
  nameWithType.vb: VirtualStorage(Of T).AddSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ChangeDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: ChangeDirectory(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ChangeDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ChangeDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ChangeDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ChangeDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.ChangeDirectory(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).ChangeDirectory(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ChangeDirectory*
  name: ChangeDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ChangeDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ChangeDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ChangeDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ChangeDirectory
  nameWithType: VirtualStorage<T>.ChangeDirectory
  nameWithType.vb: VirtualStorage(Of T).ChangeDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ConvertToAbsolutePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: ConvertToAbsolutePath(VirtualPath?, VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ConvertToAbsolutePath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ConvertToAbsolutePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: ConvertToAbsolutePath(VirtualPath, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ConvertToAbsolutePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath?, AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ConvertToAbsolutePath(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.ConvertToAbsolutePath(VirtualPath?, VirtualPath?)
  nameWithType.vb: VirtualStorage(Of T).ConvertToAbsolutePath(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ConvertToAbsolutePath*
  name: ConvertToAbsolutePath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ConvertToAbsolutePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ConvertToAbsolutePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ConvertToAbsolutePath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ConvertToAbsolutePath
  nameWithType: VirtualStorage<T>.ConvertToAbsolutePath
  nameWithType.vb: VirtualStorage(Of T).ConvertToAbsolutePath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CopyNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext})
  name: CopyNode(VirtualPath, VirtualPath, bool, bool, bool, List<VirtualNodeContext>?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CopyNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_List_AkiraNetwork_VirtualStorageLibrary_VirtualNodeContext__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CopyNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext})
  name.vb: CopyNode(VirtualPath, VirtualPath, Boolean, Boolean, Boolean, List(Of VirtualNodeContext))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CopyNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool, bool, bool, System.Collections.Generic.List<AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext>?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CopyNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, Boolean, Boolean, System.Collections.Generic.List(Of AkiraNetwork.VirtualStorageLibrary.VirtualNodeContext))
  nameWithType: VirtualStorage<T>.CopyNode(VirtualPath, VirtualPath, bool, bool, bool, List<VirtualNodeContext>?)
  nameWithType.vb: VirtualStorage(Of T).CopyNode(VirtualPath, VirtualPath, Boolean, Boolean, Boolean, List(Of VirtualNodeContext))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CopyNode*
  name: CopyNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CopyNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CopyNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CopyNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CopyNode
  nameWithType: VirtualStorage<T>.CopyNode
  nameWithType.vb: VirtualStorage(Of T).CopyNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CurrentPath
  name: CurrentPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CurrentPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CurrentPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CurrentPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CurrentPath
  nameWithType: VirtualStorage<T>.CurrentPath
  nameWithType.vb: VirtualStorage(Of T).CurrentPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CurrentPath*
  name: CurrentPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CurrentPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CurrentPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CurrentPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CurrentPath
  nameWithType: VirtualStorage<T>.CurrentPath
  nameWithType.vb: VirtualStorage(Of T).CurrentPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTarget
  name: CycleDetectorForTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CycleDetectorForTarget
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTarget
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CycleDetectorForTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CycleDetectorForTarget
  nameWithType: VirtualStorage<T>.CycleDetectorForTarget
  nameWithType.vb: VirtualStorage(Of T).CycleDetectorForTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTarget*
  name: CycleDetectorForTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CycleDetectorForTarget_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTarget
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CycleDetectorForTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CycleDetectorForTarget
  nameWithType: VirtualStorage<T>.CycleDetectorForTarget
  nameWithType.vb: VirtualStorage(Of T).CycleDetectorForTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTree
  name: CycleDetectorForTree
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CycleDetectorForTree
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTree
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CycleDetectorForTree
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CycleDetectorForTree
  nameWithType: VirtualStorage<T>.CycleDetectorForTree
  nameWithType.vb: VirtualStorage(Of T).CycleDetectorForTree
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTree*
  name: CycleDetectorForTree
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_CycleDetectorForTree_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.CycleDetectorForTree
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.CycleDetectorForTree
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).CycleDetectorForTree
  nameWithType: VirtualStorage<T>.CycleDetectorForTree
  nameWithType.vb: VirtualStorage(Of T).CycleDetectorForTree
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: DirectoryExists(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_DirectoryExists_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: DirectoryExists(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).DirectoryExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.DirectoryExists(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).DirectoryExists(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.DirectoryExists*
  name: DirectoryExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_DirectoryExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.DirectoryExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.DirectoryExists
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).DirectoryExists
  nameWithType: VirtualStorage<T>.DirectoryExists
  nameWithType.vb: VirtualStorage(Of T).DirectoryExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: ExpandPath(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ExpandPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: ExpandPath(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ExpandPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ExpandPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.ExpandPath(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).ExpandPath(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPath*
  name: ExpandPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ExpandPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ExpandPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ExpandPath
  nameWithType: VirtualStorage<T>.ExpandPath
  nameWithType.vb: VirtualStorage(Of T).ExpandPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: ExpandPathTree(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ExpandPathTree_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: ExpandPathTree(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ExpandPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ExpandPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.ExpandPathTree(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).ExpandPathTree(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPathTree*
  name: ExpandPathTree
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ExpandPathTree_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ExpandPathTree
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ExpandPathTree
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ExpandPathTree
  nameWithType: VirtualStorage<T>.ExpandPathTree
  nameWithType.vb: VirtualStorage(Of T).ExpandPathTree
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: GetDirectory(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: GetDirectory(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.GetDirectory(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).GetDirectory(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetDirectory*
  name: GetDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetDirectory
  nameWithType: VirtualStorage<T>.GetDirectory
  nameWithType.vb: VirtualStorage(Of T).GetDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: GetItem(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetItem_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: GetItem(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.GetItem(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).GetItem(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetItem*
  name: GetItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetItem
  nameWithType: VirtualStorage<T>.GetItem
  nameWithType.vb: VirtualStorage(Of T).GetItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetLinksFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: GetLinksFromDictionary(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetLinksFromDictionary_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetLinksFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetLinksFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetLinksFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.GetLinksFromDictionary(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).GetLinksFromDictionary(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetLinksFromDictionary*
  name: GetLinksFromDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetLinksFromDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetLinksFromDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetLinksFromDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetLinksFromDictionary
  nameWithType: VirtualStorage<T>.GetLinksFromDictionary
  nameWithType.vb: VirtualStorage(Of T).GetLinksFromDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: GetNode(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: GetNode(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.GetNode(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNode(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNode*
  name: GetNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNode
  nameWithType: VirtualStorage<T>.GetNode
  nameWithType.vb: VirtualStorage(Of T).GetNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: GetNodeType(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodeType_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: GetNodeType(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodeType(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.GetNodeType(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNodeType(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodeType*
  name: GetNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodeType
  nameWithType: VirtualStorage<T>.GetNodeType
  nameWithType.vb: VirtualStorage(Of T).GetNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: GetNodes(VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodes_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: GetNodes(VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.GetNodes(VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNodes(VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: GetNodes(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodes_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: GetNodes(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodes(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.GetNodes(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNodes(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes*
  name: GetNodes
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodes_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodes
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodes
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodes
  nameWithType: VirtualStorage<T>.GetNodes
  nameWithType.vb: VirtualStorage(Of T).GetNodes
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: GetNodesWithPaths(VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodesWithPaths_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: GetNodesWithPaths(VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.GetNodesWithPaths(VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNodesWithPaths(VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name: GetNodesWithPaths(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodesWithPaths_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean)
  name.vb: GetNodesWithPaths(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodesWithPaths(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.GetNodesWithPaths(VirtualPath, VirtualNodeTypeFilter, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).GetNodesWithPaths(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths*
  name: GetNodesWithPaths
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetNodesWithPaths_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetNodesWithPaths
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetNodesWithPaths
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetNodesWithPaths
  nameWithType: VirtualStorage<T>.GetNodesWithPaths
  nameWithType.vb: VirtualStorage(Of T).GetNodesWithPaths
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: GetSymbolicLink(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.GetSymbolicLink(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).GetSymbolicLink(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetSymbolicLink*
  name: GetSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_GetSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.GetSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.GetSymbolicLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).GetSymbolicLink
  nameWithType: VirtualStorage<T>.GetSymbolicLink
  nameWithType.vb: VirtualStorage(Of T).GetSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Indexer(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: this[VirtualPath, bool]
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_Indexer_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Indexer(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: this[](VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.this[AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool]
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).this[](AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.this[VirtualPath, bool]
  nameWithType.vb: VirtualStorage(Of T).this[](VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Indexer*
  name: this
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_Indexer_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Indexer
  isSpec: "True"
  name.vb: this[]
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.this
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).this[]
  nameWithType: VirtualStorage<T>.this
  nameWithType.vb: VirtualStorage(Of T).this[]
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: ItemExists(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ItemExists_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: ItemExists(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ItemExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.ItemExists(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).ItemExists(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ItemExists*
  name: ItemExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ItemExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ItemExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ItemExists
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ItemExists
  nameWithType: VirtualStorage<T>.ItemExists
  nameWithType.vb: VirtualStorage(Of T).ItemExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.LinkDictionary
  name: LinkDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_LinkDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.LinkDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.LinkDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).LinkDictionary
  nameWithType: VirtualStorage<T>.LinkDictionary
  nameWithType.vb: VirtualStorage(Of T).LinkDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.LinkDictionary*
  name: LinkDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_LinkDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.LinkDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.LinkDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).LinkDictionary
  nameWithType: VirtualStorage<T>.LinkDictionary
  nameWithType.vb: VirtualStorage(Of T).LinkDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.MoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean)
  name: MoveNode(VirtualPath, VirtualPath, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_MoveNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.MoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean)
  name.vb: MoveNode(VirtualPath, VirtualPath, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.MoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).MoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.MoveNode(VirtualPath, VirtualPath, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).MoveNode(VirtualPath, VirtualPath, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.MoveNode*
  name: MoveNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_MoveNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.MoveNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.MoveNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).MoveNode
  nameWithType: VirtualStorage<T>.MoveNode
  nameWithType.vb: VirtualStorage(Of T).MoveNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: NodeExists(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_NodeExists_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: NodeExists(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).NodeExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.NodeExists(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).NodeExists(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.NodeExists*
  name: NodeExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_NodeExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.NodeExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.NodeExists
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).NodeExists
  nameWithType: VirtualStorage<T>.NodeExists
  nameWithType.vb: VirtualStorage(Of T).NodeExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkByLinkPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: RemoveLinkByLinkPath(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveLinkByLinkPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkByLinkPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveLinkByLinkPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveLinkByLinkPath(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.RemoveLinkByLinkPath(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).RemoveLinkByLinkPath(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkByLinkPath*
  name: RemoveLinkByLinkPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveLinkByLinkPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkByLinkPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveLinkByLinkPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveLinkByLinkPath
  nameWithType: VirtualStorage<T>.RemoveLinkByLinkPath
  nameWithType.vb: VirtualStorage(Of T).RemoveLinkByLinkPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: RemoveLinkFromDictionary(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveLinkFromDictionary_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveLinkFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveLinkFromDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.RemoveLinkFromDictionary(VirtualPath, VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).RemoveLinkFromDictionary(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkFromDictionary*
  name: RemoveLinkFromDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveLinkFromDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveLinkFromDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveLinkFromDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveLinkFromDictionary
  nameWithType: VirtualStorage<T>.RemoveLinkFromDictionary
  nameWithType.vb: VirtualStorage(Of T).RemoveLinkFromDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean,System.Boolean)
  name: RemoveNode(VirtualPath, bool, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean,System.Boolean,System.Boolean)
  name.vb: RemoveNode(VirtualPath, Boolean, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.RemoveNode(VirtualPath, bool, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).RemoveNode(VirtualPath, Boolean, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveNode*
  name: RemoveNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_RemoveNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.RemoveNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.RemoveNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).RemoveNode
  nameWithType: VirtualStorage<T>.RemoveNode
  nameWithType.vb: VirtualStorage(Of T).RemoveNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: ResolveLinkTarget(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ResolveLinkTarget_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.ResolveLinkTarget(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).ResolveLinkTarget(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ResolveLinkTarget*
  name: ResolveLinkTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_ResolveLinkTarget_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.ResolveLinkTarget
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.ResolveLinkTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).ResolveLinkTarget
  nameWithType: VirtualStorage<T>.ResolveLinkTarget
  nameWithType.vb: VirtualStorage(Of T).ResolveLinkTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Root
  name: Root
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_Root
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Root
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.Root
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).Root
  nameWithType: VirtualStorage<T>.Root
  nameWithType.vb: VirtualStorage(Of T).Root
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Root*
  name: Root
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_Root_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.Root
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.Root
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).Root
  nameWithType: VirtualStorage<T>.Root
  nameWithType.vb: VirtualStorage(Of T).Root
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetLinkTargetNodeType(System.Collections.Generic.HashSet{AkiraNetwork.VirtualStorageLibrary.VirtualPath},AkiraNetwork.VirtualStorageLibrary.VirtualNodeType)
  name: SetLinkTargetNodeType(HashSet<VirtualPath>, VirtualNodeType)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetLinkTargetNodeType_System_Collections_Generic_HashSet_AkiraNetwork_VirtualStorageLibrary_VirtualPath__AkiraNetwork_VirtualStorageLibrary_VirtualNodeType_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetLinkTargetNodeType(System.Collections.Generic.HashSet{AkiraNetwork.VirtualStorageLibrary.VirtualPath},AkiraNetwork.VirtualStorageLibrary.VirtualNodeType)
  name.vb: SetLinkTargetNodeType(HashSet(Of VirtualPath), VirtualNodeType)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetLinkTargetNodeType(System.Collections.Generic.HashSet<AkiraNetwork.VirtualStorageLibrary.VirtualPath>, AkiraNetwork.VirtualStorageLibrary.VirtualNodeType)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetLinkTargetNodeType(System.Collections.Generic.HashSet(Of AkiraNetwork.VirtualStorageLibrary.VirtualPath), AkiraNetwork.VirtualStorageLibrary.VirtualNodeType)
  nameWithType: VirtualStorage<T>.SetLinkTargetNodeType(HashSet<VirtualPath>, VirtualNodeType)
  nameWithType.vb: VirtualStorage(Of T).SetLinkTargetNodeType(HashSet(Of VirtualPath), VirtualNodeType)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetLinkTargetNodeType*
  name: SetLinkTargetNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetLinkTargetNodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetLinkTargetNodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetLinkTargetNodeType
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetLinkTargetNodeType
  nameWithType: VirtualStorage<T>.SetLinkTargetNodeType
  nameWithType.vb: VirtualStorage(Of T).SetLinkTargetNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: SetNode(VirtualPath, VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualStorage<T>.SetNode(VirtualPath, VirtualNode)
  nameWithType.vb: VirtualStorage(Of T).SetNode(VirtualPath, VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNode*
  name: SetNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetNode
  nameWithType: VirtualStorage<T>.SetNode
  nameWithType.vb: VirtualStorage(Of T).SetNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name: SetNodeName(VirtualPath, VirtualNodeName, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,System.Boolean)
  name.vb: SetNodeName(VirtualPath, VirtualNodeName, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetNodeName(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, Boolean)
  nameWithType: VirtualStorage<T>.SetNodeName(VirtualPath, VirtualNodeName, bool)
  nameWithType.vb: VirtualStorage(Of T).SetNodeName(VirtualPath, VirtualNodeName, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNodeName*
  name: SetNodeName
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SetNodeName_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SetNodeName
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SetNodeName
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SetNodeName
  nameWithType: VirtualStorage<T>.SetNodeName
  nameWithType.vb: VirtualStorage(Of T).SetNodeName
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: SymbolicLinkExists(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SymbolicLinkExists_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SymbolicLinkExists(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.SymbolicLinkExists(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).SymbolicLinkExists(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SymbolicLinkExists*
  name: SymbolicLinkExists
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_SymbolicLinkExists_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.SymbolicLinkExists
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.SymbolicLinkExists
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).SymbolicLinkExists
  nameWithType: VirtualStorage<T>.SymbolicLinkExists
  nameWithType.vb: VirtualStorage(Of T).SymbolicLinkExists
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: TryGetDirectory(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: TryGetDirectory(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.TryGetDirectory(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).TryGetDirectory(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetDirectory*
  name: TryGetDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetDirectory
  nameWithType: VirtualStorage<T>.TryGetDirectory
  nameWithType.vb: VirtualStorage(Of T).TryGetDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: TryGetItem(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetItem_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: TryGetItem(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.TryGetItem(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).TryGetItem(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetItem*
  name: TryGetItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetItem
  nameWithType: VirtualStorage<T>.TryGetItem
  nameWithType.vb: VirtualStorage(Of T).TryGetItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: TryGetNode(VirtualPath, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetNode_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: TryGetNode(VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetNode(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualStorage<T>.TryGetNode(VirtualPath, bool)
  nameWithType.vb: VirtualStorage(Of T).TryGetNode(VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetNode*
  name: TryGetNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetNode
  nameWithType: VirtualStorage<T>.TryGetNode
  nameWithType.vb: VirtualStorage(Of T).TryGetNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: TryGetSymbolicLink(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetSymbolicLink_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.TryGetSymbolicLink(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).TryGetSymbolicLink(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetSymbolicLink*
  name: TryGetSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryGetSymbolicLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryGetSymbolicLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryGetSymbolicLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryGetSymbolicLink
  nameWithType: VirtualStorage<T>.TryGetSymbolicLink
  nameWithType.vb: VirtualStorage(Of T).TryGetSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: TryResolveLinkTarget(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryResolveLinkTarget_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryResolveLinkTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.TryResolveLinkTarget(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).TryResolveLinkTarget(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryResolveLinkTarget*
  name: TryResolveLinkTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_TryResolveLinkTarget_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.TryResolveLinkTarget
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.TryResolveLinkTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).TryResolveLinkTarget
  nameWithType: VirtualStorage<T>.TryResolveLinkTarget
  nameWithType.vb: VirtualStorage(Of T).TryResolveLinkTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateAllTargetNodeTypesInDictionary
  name: UpdateAllTargetNodeTypesInDictionary()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateAllTargetNodeTypesInDictionary
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateAllTargetNodeTypesInDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateAllTargetNodeTypesInDictionary()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateAllTargetNodeTypesInDictionary()
  nameWithType: VirtualStorage<T>.UpdateAllTargetNodeTypesInDictionary()
  nameWithType.vb: VirtualStorage(Of T).UpdateAllTargetNodeTypesInDictionary()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateAllTargetNodeTypesInDictionary*
  name: UpdateAllTargetNodeTypesInDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateAllTargetNodeTypesInDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateAllTargetNodeTypesInDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateAllTargetNodeTypesInDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateAllTargetNodeTypesInDictionary
  nameWithType: VirtualStorage<T>.UpdateAllTargetNodeTypesInDictionary
  nameWithType.vb: VirtualStorage(Of T).UpdateAllTargetNodeTypesInDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory)
  name: UpdateDirectory(VirtualPath, VirtualDirectory)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateDirectory_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateDirectory(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory)
  nameWithType: VirtualStorage<T>.UpdateDirectory(VirtualPath, VirtualDirectory)
  nameWithType.vb: VirtualStorage(Of T).UpdateDirectory(VirtualPath, VirtualDirectory)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateDirectory*
  name: UpdateDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateDirectory
  nameWithType: VirtualStorage<T>.UpdateDirectory
  nameWithType.vb: VirtualStorage(Of T).UpdateDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0})
  name: UpdateItem(VirtualPath, VirtualItem<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateItem_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualItem__0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualItem{`0})
  name.vb: UpdateItem(VirtualPath, VirtualItem(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualItem<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateItem(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualItem(Of T))
  nameWithType: VirtualStorage<T>.UpdateItem(VirtualPath, VirtualItem<T>)
  nameWithType.vb: VirtualStorage(Of T).UpdateItem(VirtualPath, VirtualItem(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateItem*
  name: UpdateItem
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateItem_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateItem
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateItem
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateItem
  nameWithType: VirtualStorage<T>.UpdateItem
  nameWithType.vb: VirtualStorage(Of T).UpdateItem
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinkInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: UpdateLinkInDictionary(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateLinkInDictionary_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinkInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateLinkInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateLinkInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.UpdateLinkInDictionary(VirtualPath, VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).UpdateLinkInDictionary(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinkInDictionary*
  name: UpdateLinkInDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateLinkInDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinkInDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateLinkInDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateLinkInDictionary
  nameWithType: VirtualStorage<T>.UpdateLinkInDictionary
  nameWithType.vb: VirtualStorage(Of T).UpdateLinkInDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinksToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: UpdateLinksToTarget(VirtualPath, VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateLinksToTarget_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinksToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateLinksToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateLinksToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.UpdateLinksToTarget(VirtualPath, VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).UpdateLinksToTarget(VirtualPath, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinksToTarget*
  name: UpdateLinksToTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateLinksToTarget_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateLinksToTarget
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateLinksToTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateLinksToTarget
  nameWithType: VirtualStorage<T>.UpdateLinksToTarget
  nameWithType.vb: VirtualStorage(Of T).UpdateLinksToTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateSymbolicLInk(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name: UpdateSymbolicLInk(VirtualPath, VirtualSymbolicLink)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateSymbolicLInk_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateSymbolicLInk(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateSymbolicLInk(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateSymbolicLInk(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  nameWithType: VirtualStorage<T>.UpdateSymbolicLInk(VirtualPath, VirtualSymbolicLink)
  nameWithType.vb: VirtualStorage(Of T).UpdateSymbolicLInk(VirtualPath, VirtualSymbolicLink)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateSymbolicLInk*
  name: UpdateSymbolicLInk
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateSymbolicLInk_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateSymbolicLInk
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateSymbolicLInk
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateSymbolicLInk
  nameWithType: VirtualStorage<T>.UpdateSymbolicLInk
  nameWithType.vb: VirtualStorage(Of T).UpdateSymbolicLInk
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateTargetNodeTypesInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: UpdateTargetNodeTypesInDictionary(VirtualPath)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateTargetNodeTypesInDictionary_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateTargetNodeTypesInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateTargetNodeTypesInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateTargetNodeTypesInDictionary(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualStorage<T>.UpdateTargetNodeTypesInDictionary(VirtualPath)
  nameWithType.vb: VirtualStorage(Of T).UpdateTargetNodeTypesInDictionary(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateTargetNodeTypesInDictionary*
  name: UpdateTargetNodeTypesInDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_UpdateTargetNodeTypesInDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.UpdateTargetNodeTypesInDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.UpdateTargetNodeTypesInDictionary
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).UpdateTargetNodeTypesInDictionary
  nameWithType: VirtualStorage<T>.UpdateTargetNodeTypesInDictionary
  nameWithType.vb: VirtualStorage(Of T).UpdateTargetNodeTypesInDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate,AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate,System.Boolean,System.Boolean)
  name: WalkPathToTarget(VirtualPath, NotifyNodeDelegate?, ActionNodeDelegate?, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTarget_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_NotifyNodeDelegate_AkiraNetwork_VirtualStorageLibrary_ActionNodeDelegate_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate,AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate,System.Boolean,System.Boolean)
  name.vb: WalkPathToTarget(VirtualPath, NotifyNodeDelegate, ActionNodeDelegate, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate?, AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate?, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTarget(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate, AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.WalkPathToTarget(VirtualPath, NotifyNodeDelegate?, ActionNodeDelegate?, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTarget(VirtualPath, NotifyNodeDelegate, ActionNodeDelegate, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTarget*
  name: WalkPathToTarget
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTarget_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTarget
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTarget
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTarget
  nameWithType: VirtualStorage<T>.WalkPathToTarget
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTarget
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters
  name: VirtualStorage<T>.WalkPathToTargetParameters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters
  name.vb: VirtualStorage(Of T).WalkPathToTargetParameters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate,AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate,System.Boolean,System.Boolean,System.Boolean)
  name: WalkPathToTargetParameters(VirtualPath, int, VirtualPath, VirtualPath?, VirtualDirectory, NotifyNodeDelegate?, ActionNodeDelegate?, bool, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Int32_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_AkiraNetwork_VirtualStorageLibrary_NotifyNodeDelegate_AkiraNetwork_VirtualStorageLibrary_ActionNodeDelegate_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate,AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate,System.Boolean,System.Boolean,System.Boolean)
  name.vb: New(VirtualPath, Integer, VirtualPath, VirtualPath, VirtualDirectory, NotifyNodeDelegate, ActionNodeDelegate, Boolean, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.WalkPathToTargetParameters(AkiraNetwork.VirtualStorageLibrary.VirtualPath, int, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath?, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate?, AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate?, bool, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.New(AkiraNetwork.VirtualStorageLibrary.VirtualPath, Integer, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, AkiraNetwork.VirtualStorageLibrary.NotifyNodeDelegate, AkiraNetwork.VirtualStorageLibrary.ActionNodeDelegate, Boolean, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.WalkPathToTargetParameters(VirtualPath, int, VirtualPath, VirtualPath?, VirtualDirectory, NotifyNodeDelegate?, ActionNodeDelegate?, bool, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.New(VirtualPath, Integer, VirtualPath, VirtualPath, VirtualDirectory, NotifyNodeDelegate, ActionNodeDelegate, Boolean, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.#ctor*
  name: WalkPathToTargetParameters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.WalkPathToTargetParameters
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.New
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.WalkPathToTargetParameters
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ActionNode
  name: ActionNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ActionNode
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ActionNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ActionNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ActionNode
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ActionNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ActionNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ActionNode*
  name: ActionNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ActionNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ActionNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ActionNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ActionNode
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ActionNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ActionNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ExceptionEnabled
  name: ExceptionEnabled
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ExceptionEnabled
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ExceptionEnabled
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ExceptionEnabled
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ExceptionEnabled
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ExceptionEnabled
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ExceptionEnabled
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ExceptionEnabled*
  name: ExceptionEnabled
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ExceptionEnabled_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ExceptionEnabled
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ExceptionEnabled
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ExceptionEnabled
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ExceptionEnabled
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ExceptionEnabled
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.FollowLinks
  name: FollowLinks
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_FollowLinks
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.FollowLinks
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.FollowLinks
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.FollowLinks
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.FollowLinks
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.FollowLinks
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.FollowLinks*
  name: FollowLinks
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_FollowLinks_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.FollowLinks
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.FollowLinks
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.FollowLinks
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.FollowLinks
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.FollowLinks
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.NotifyNode
  name: NotifyNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_NotifyNode
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.NotifyNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.NotifyNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.NotifyNode
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.NotifyNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.NotifyNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.NotifyNode*
  name: NotifyNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_NotifyNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.NotifyNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.NotifyNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.NotifyNode
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.NotifyNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.NotifyNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.Resolved
  name: Resolved
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_Resolved
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.Resolved
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.Resolved
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.Resolved
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.Resolved
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.Resolved
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.Resolved*
  name: Resolved
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_Resolved_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.Resolved
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.Resolved
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.Resolved
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.Resolved
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.Resolved
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ResolvedPath
  name: ResolvedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ResolvedPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ResolvedPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ResolvedPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ResolvedPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ResolvedPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ResolvedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ResolvedPath*
  name: ResolvedPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_ResolvedPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.ResolvedPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.ResolvedPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.ResolvedPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.ResolvedPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.ResolvedPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TargetPath
  name: TargetPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TargetPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TargetPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TargetPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TargetPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TargetPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TargetPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TargetPath*
  name: TargetPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TargetPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TargetPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TargetPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TargetPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TargetPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TargetPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalDirectory
  name: TraversalDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalDirectory
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalDirectory
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalDirectory*
  name: TraversalDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalDirectory
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalDirectory
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalIndex
  name: TraversalIndex
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalIndex
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalIndex
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalIndex
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalIndex
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalIndex
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalIndex
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalIndex*
  name: TraversalIndex
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalIndex_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalIndex
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalIndex
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalIndex
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalIndex
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalIndex
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalPath
  name: TraversalPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalPath*
  name: TraversalPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathToTargetParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathToTargetParameters_TraversalPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathToTargetParameters.TraversalPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathToTargetParameters.TraversalPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathToTargetParameters.TraversalPath
  nameWithType: VirtualStorage<T>.WalkPathToTargetParameters.TraversalPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathToTargetParameters.TraversalPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean,System.Boolean)
  name: WalkPathTree(VirtualPath, VirtualNodeTypeFilter, bool, bool, bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTree_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean,System.Boolean)
  name.vb: WalkPathTree(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool, bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTree(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean, Boolean)
  nameWithType: VirtualStorage<T>.WalkPathTree(VirtualPath, VirtualNodeTypeFilter, bool, bool, bool)
  nameWithType.vb: VirtualStorage(Of T).WalkPathTree(VirtualPath, VirtualNodeTypeFilter, Boolean, Boolean, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTree*
  name: WalkPathTree
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTree_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTree
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTree
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTree
  nameWithType: VirtualStorage<T>.WalkPathTree
  nameWithType.vb: VirtualStorage(Of T).WalkPathTree
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters
  name: VirtualStorage<T>.WalkPathTreeParameters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters
  name.vb: VirtualStorage(Of T).WalkPathTreeParameters
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String},AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name: WalkPathTreeParameters(VirtualPath, VirtualPath, VirtualNode, VirtualDirectory?, int, int, int, VirtualNodeTypeFilter, bool, bool, List<string>?, VirtualSymbolicLink?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualPath_AkiraNetwork_VirtualStorageLibrary_VirtualNode_AkiraNetwork_VirtualStorageLibrary_VirtualDirectory_System_Int32_System_Int32_System_Int32_AkiraNetwork_VirtualStorageLibrary_VirtualNodeTypeFilter_System_Boolean_System_Boolean_System_Collections_Generic_List_System_String__AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualPath,AkiraNetwork.VirtualStorageLibrary.VirtualNode,AkiraNetwork.VirtualStorageLibrary.VirtualDirectory,System.Int32,System.Int32,System.Int32,AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String},AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  name.vb: New(VirtualPath, VirtualPath, VirtualNode, VirtualDirectory, Integer, Integer, Integer, VirtualNodeTypeFilter, Boolean, Boolean, List(Of String), VirtualSymbolicLink)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.WalkPathTreeParameters(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory?, int, int, int, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, bool, bool, System.Collections.Generic.List<string>?, AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.New(AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualPath, AkiraNetwork.VirtualStorageLibrary.VirtualNode, AkiraNetwork.VirtualStorageLibrary.VirtualDirectory, Integer, Integer, Integer, AkiraNetwork.VirtualStorageLibrary.VirtualNodeTypeFilter, Boolean, Boolean, System.Collections.Generic.List(Of String), AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink)
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.WalkPathTreeParameters(VirtualPath, VirtualPath, VirtualNode, VirtualDirectory?, int, int, int, VirtualNodeTypeFilter, bool, bool, List<string>?, VirtualSymbolicLink?)
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.New(VirtualPath, VirtualPath, VirtualNode, VirtualDirectory, Integer, Integer, Integer, VirtualNodeTypeFilter, Boolean, Boolean, List(Of String), VirtualSymbolicLink)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.#ctor*
  name: WalkPathTreeParameters
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.WalkPathTreeParameters
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.New
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.WalkPathTreeParameters
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseDepth
  name: BaseDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BaseDepth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseDepth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BaseDepth
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BaseDepth
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BaseDepth
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BaseDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseDepth*
  name: BaseDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BaseDepth_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseDepth
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BaseDepth
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BaseDepth
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BaseDepth
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BaseDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseNode
  name: BaseNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BaseNode
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseNode
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BaseNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BaseNode
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BaseNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BaseNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseNode*
  name: BaseNode
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BaseNode_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BaseNode
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BaseNode
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BaseNode
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BaseNode
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BaseNode
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BasePath
  name: BasePath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BasePath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BasePath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BasePath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BasePath
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BasePath
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BasePath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BasePath*
  name: BasePath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_BasePath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.BasePath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.BasePath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.BasePath
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.BasePath
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.BasePath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentDepth
  name: CurrentDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentDepth
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentDepth
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentDepth
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentDepth
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentDepth
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentDepth*
  name: CurrentDepth
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentDepth_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentDepth
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentDepth
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentDepth
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentDepth
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentDepth
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentIndex
  name: CurrentIndex
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentIndex
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentIndex
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentIndex
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentIndex
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentIndex
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentIndex
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentIndex*
  name: CurrentIndex
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentIndex_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentIndex
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentIndex
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentIndex
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentIndex
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentIndex
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentPath
  name: CurrentPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentPath
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentPath*
  name: CurrentPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_CurrentPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.CurrentPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.CurrentPath
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.CurrentPath
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.CurrentPath
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.CurrentPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Filter
  name: Filter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_Filter
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Filter
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.Filter
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.Filter
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.Filter
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.Filter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Filter*
  name: Filter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_Filter_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Filter
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.Filter
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.Filter
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.Filter
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.Filter
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.FollowLinks
  name: FollowLinks
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_FollowLinks
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.FollowLinks
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.FollowLinks
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.FollowLinks
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.FollowLinks
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.FollowLinks
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.FollowLinks*
  name: FollowLinks
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_FollowLinks_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.FollowLinks
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.FollowLinks
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.FollowLinks
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.FollowLinks
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.FollowLinks
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ParentDirectory
  name: ParentDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_ParentDirectory
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ParentDirectory
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.ParentDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.ParentDirectory
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.ParentDirectory
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.ParentDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ParentDirectory*
  name: ParentDirectory
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_ParentDirectory_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ParentDirectory
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.ParentDirectory
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.ParentDirectory
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.ParentDirectory
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.ParentDirectory
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.PatternList
  name: PatternList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_PatternList
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.PatternList
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.PatternList
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.PatternList
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.PatternList
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.PatternList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.PatternList*
  name: PatternList
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_PatternList_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.PatternList
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.PatternList
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.PatternList
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.PatternList
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.PatternList
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Recursive
  name: Recursive
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_Recursive
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Recursive
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.Recursive
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.Recursive
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.Recursive
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.Recursive
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Recursive*
  name: Recursive
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_Recursive_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.Recursive
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.Recursive
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.Recursive
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.Recursive
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.Recursive
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ResolvedLink
  name: ResolvedLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_ResolvedLink
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ResolvedLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.ResolvedLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.ResolvedLink
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.ResolvedLink
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.ResolvedLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ResolvedLink*
  name: ResolvedLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualStorage-1.WalkPathTreeParameters.html#AkiraNetwork_VirtualStorageLibrary_VirtualStorage_1_WalkPathTreeParameters_ResolvedLink_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualStorage`1.WalkPathTreeParameters.ResolvedLink
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>.WalkPathTreeParameters.ResolvedLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T).WalkPathTreeParameters.ResolvedLink
  nameWithType: VirtualStorage<T>.WalkPathTreeParameters.ResolvedLink
  nameWithType.vb: VirtualStorage(Of T).WalkPathTreeParameters.ResolvedLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  name: VirtualSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  nameWithType: VirtualSymbolicLink
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor
  name: VirtualSymbolicLink()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink__ctor
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor
  name.vb: New()
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.VirtualSymbolicLink()
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.New()
  nameWithType: VirtualSymbolicLink.VirtualSymbolicLink()
  nameWithType.vb: VirtualSymbolicLink.New()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name: VirtualSymbolicLink(VirtualNodeName)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  name.vb: New(VirtualNodeName)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.VirtualSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName)
  nameWithType: VirtualSymbolicLink.VirtualSymbolicLink(VirtualNodeName)
  nameWithType.vb: VirtualSymbolicLink.New(VirtualNodeName)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name: VirtualSymbolicLink(VirtualNodeName, VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualPath_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  name.vb: New(VirtualNodeName, VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.VirtualSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualSymbolicLink.VirtualSymbolicLink(VirtualNodeName, VirtualPath?)
  nameWithType.vb: VirtualSymbolicLink.New(VirtualNodeName, VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.DateTime,System.DateTime)
  name: VirtualSymbolicLink(VirtualNodeName, VirtualPath?, DateTime, DateTime)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_DateTime_System_DateTime_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.DateTime,System.DateTime)
  name.vb: New(VirtualNodeName, VirtualPath, Date, Date)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.VirtualSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath?, System.DateTime, System.DateTime)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.New(AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath, Date, Date)
  nameWithType: VirtualSymbolicLink.VirtualSymbolicLink(VirtualNodeName, VirtualPath?, DateTime, DateTime)
  nameWithType.vb: VirtualSymbolicLink.New(VirtualNodeName, VirtualPath, Date, Date)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor*
  name: VirtualSymbolicLink
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.VirtualSymbolicLink
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.New
  nameWithType: VirtualSymbolicLink.VirtualSymbolicLink
  nameWithType.vb: VirtualSymbolicLink.New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone(System.Boolean)
  name: DeepClone(bool)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_DeepClone_System_Boolean_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone(System.Boolean)
  name.vb: DeepClone(Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone(bool)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone(Boolean)
  nameWithType: VirtualSymbolicLink.DeepClone(bool)
  nameWithType.vb: VirtualSymbolicLink.DeepClone(Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone*
  name: DeepClone
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_DeepClone_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.DeepClone
  nameWithType: VirtualSymbolicLink.DeepClone
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_NodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType
  nameWithType: VirtualSymbolicLink.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType*
  name: NodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_NodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.NodeType
  nameWithType: VirtualSymbolicLink.NodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType
  name: TargetNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_TargetNodeType
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType
  nameWithType: VirtualSymbolicLink.TargetNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType*
  name: TargetNodeType
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_TargetNodeType_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetNodeType
  nameWithType: VirtualSymbolicLink.TargetNodeType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath
  name: TargetPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_TargetPath
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath
  nameWithType: VirtualSymbolicLink.TargetPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath*
  name: TargetPath
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_TargetPath_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.TargetPath
  nameWithType: VirtualSymbolicLink.TargetPath
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString
  name: ToString()
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_ToString
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString()
  nameWithType: VirtualSymbolicLink.ToString()
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString*
  name: ToString
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_ToString_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.ToString
  nameWithType: VirtualSymbolicLink.ToString
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  name: Update(VirtualNode)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_Update_AkiraNetwork_VirtualStorageLibrary_VirtualNode_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update(AkiraNetwork.VirtualStorageLibrary.VirtualNode)
  nameWithType: VirtualSymbolicLink.Update(VirtualNode)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update*
  name: Update
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_Update_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.Update
  nameWithType: VirtualSymbolicLink.Update
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualPath)~AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  name: implicit operator VirtualSymbolicLink(VirtualPath?)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_op_Implicit_AkiraNetwork_VirtualStorageLibrary_VirtualPath__AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit(AkiraNetwork.VirtualStorageLibrary.VirtualPath)~AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  name.vb: CType(VirtualPath)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink(AkiraNetwork.VirtualStorageLibrary.VirtualPath?)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.CType(AkiraNetwork.VirtualStorageLibrary.VirtualPath)
  nameWithType: VirtualSymbolicLink.implicit operator VirtualSymbolicLink(VirtualPath?)
  nameWithType.vb: VirtualSymbolicLink.CType(VirtualPath)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath})~AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  name: implicit operator VirtualSymbolicLink((VirtualNodeName nodeName, VirtualPath? targetPath))
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_op_Implicit_System_ValueTuple_AkiraNetwork_VirtualStorageLibrary_VirtualNodeName_AkiraNetwork_VirtualStorageLibrary_VirtualPath___AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit(System.ValueTuple{AkiraNetwork.VirtualStorageLibrary.VirtualNodeName,AkiraNetwork.VirtualStorageLibrary.VirtualPath})~AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink
  name.vb: CType((nodeName As VirtualNodeName, targetPath As VirtualPath))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.implicit operator AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink((AkiraNetwork.VirtualStorageLibrary.VirtualNodeName nodeName, AkiraNetwork.VirtualStorageLibrary.VirtualPath? targetPath))
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.CType((nodeName As AkiraNetwork.VirtualStorageLibrary.VirtualNodeName, targetPath As AkiraNetwork.VirtualStorageLibrary.VirtualPath))
  nameWithType: VirtualSymbolicLink.implicit operator VirtualSymbolicLink((VirtualNodeName nodeName, VirtualPath? targetPath))
  nameWithType.vb: VirtualSymbolicLink.CType((nodeName As VirtualNodeName, targetPath As VirtualPath))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit*
  name: implicit operator
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLink_op_Implicit_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.implicit operator
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLink.CType
  nameWithType: VirtualSymbolicLink.implicit operator
  nameWithType.vb: VirtualSymbolicLink.CType
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1
  name: VirtualSymbolicLinkAdapter<T>
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter-1.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1
  name.vb: VirtualSymbolicLinkAdapter(Of T)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter<T>
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter(Of T)
  nameWithType: VirtualSymbolicLinkAdapter<T>
  nameWithType.vb: VirtualSymbolicLinkAdapter(Of T)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name: VirtualSymbolicLinkAdapter(VirtualStorage<T>)
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLinkAdapter_1__ctor_AkiraNetwork_VirtualStorageLibrary_VirtualStorage__0__
  commentId: M:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.#ctor(AkiraNetwork.VirtualStorageLibrary.VirtualStorage{`0})
  name.vb: New(VirtualStorage(Of T))
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter<T>.VirtualSymbolicLinkAdapter(AkiraNetwork.VirtualStorageLibrary.VirtualStorage<T>)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter(Of T).New(AkiraNetwork.VirtualStorageLibrary.VirtualStorage(Of T))
  nameWithType: VirtualSymbolicLinkAdapter<T>.VirtualSymbolicLinkAdapter(VirtualStorage<T>)
  nameWithType.vb: VirtualSymbolicLinkAdapter(Of T).New(VirtualStorage(Of T))
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.#ctor*
  name: VirtualSymbolicLinkAdapter
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLinkAdapter_1__ctor_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter<T>.VirtualSymbolicLinkAdapter
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter(Of T).New
  nameWithType: VirtualSymbolicLinkAdapter<T>.VirtualSymbolicLinkAdapter
  nameWithType.vb: VirtualSymbolicLinkAdapter(Of T).New
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name: this[VirtualPath, bool]
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLinkAdapter_1_Item_AkiraNetwork_VirtualStorageLibrary_VirtualPath_System_Boolean_
  commentId: P:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.Item(AkiraNetwork.VirtualStorageLibrary.VirtualPath,System.Boolean)
  name.vb: this[](VirtualPath, Boolean)
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter<T>.this[AkiraNetwork.VirtualStorageLibrary.VirtualPath, bool]
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter(Of T).this[](AkiraNetwork.VirtualStorageLibrary.VirtualPath, Boolean)
  nameWithType: VirtualSymbolicLinkAdapter<T>.this[VirtualPath, bool]
  nameWithType.vb: VirtualSymbolicLinkAdapter(Of T).this[](VirtualPath, Boolean)
- uid: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.Item*
  name: this
  href: api/AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter-1.html#AkiraNetwork_VirtualStorageLibrary_VirtualSymbolicLinkAdapter_1_Item_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter<T>.this
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.VirtualSymbolicLinkAdapter(Of T).this[]
  nameWithType: VirtualSymbolicLinkAdapter<T>.this
  nameWithType.vb: VirtualSymbolicLinkAdapter(Of T).this[]
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers
  name: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.html
  commentId: N:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers
  nameWithType: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher
  name: DefaultWildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher
  nameWithType: DefaultWildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count
  nameWithType: DefaultWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count*
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Count_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Count
  nameWithType: DefaultWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher(System.String,System.String)
  name: PatternMatcher(string, string)
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_PatternMatcher_System_String_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher(System.String,System.String)
  name.vb: PatternMatcher(String, String)
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher(string, string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher(String, String)
  nameWithType: DefaultWildcardMatcher.PatternMatcher(string, string)
  nameWithType.vb: DefaultWildcardMatcher.PatternMatcher(String, String)
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher*
  name: PatternMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_PatternMatcher_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.PatternMatcher
  nameWithType: DefaultWildcardMatcher.PatternMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Patterns
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns
  nameWithType: DefaultWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns*
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Patterns_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Patterns
  nameWithType: DefaultWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_WildcardDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary
  nameWithType: DefaultWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary*
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_WildcardDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.WildcardDictionary
  nameWithType: DefaultWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Wildcards
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards
  nameWithType: DefaultWildcardMatcher.Wildcards
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards*
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_DefaultWildcardMatcher_Wildcards_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.DefaultWildcardMatcher.Wildcards
  nameWithType: DefaultWildcardMatcher.Wildcards
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher
  name: PowerShellWildcardMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html
  commentId: T:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher
  nameWithType: PowerShellWildcardMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Count
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count
  nameWithType: PowerShellWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count*
  name: Count
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Count_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Count
  nameWithType: PowerShellWildcardMatcher.Count
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher(System.String,System.String)
  name: PatternMatcher(string, string)
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_PatternMatcher_System_String_System_String_
  commentId: M:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher(System.String,System.String)
  name.vb: PatternMatcher(String, String)
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher(string, string)
  fullName.vb: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher(String, String)
  nameWithType: PowerShellWildcardMatcher.PatternMatcher(string, string)
  nameWithType.vb: PowerShellWildcardMatcher.PatternMatcher(String, String)
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher*
  name: PatternMatcher
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_PatternMatcher_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.PatternMatcher
  nameWithType: PowerShellWildcardMatcher.PatternMatcher
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Patterns
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns
  nameWithType: PowerShellWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns*
  name: Patterns
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Patterns_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Patterns
  nameWithType: PowerShellWildcardMatcher.Patterns
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_WildcardDictionary
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary
  nameWithType: PowerShellWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary*
  name: WildcardDictionary
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_WildcardDictionary_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.WildcardDictionary
  nameWithType: PowerShellWildcardMatcher.WildcardDictionary
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Wildcards
  commentId: P:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards
  nameWithType: PowerShellWildcardMatcher.Wildcards
- uid: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards*
  name: Wildcards
  href: api/AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.html#AkiraNetwork_VirtualStorageLibrary_WildcardMatchers_PowerShellWildcardMatcher_Wildcards_
  commentId: Overload:AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards
  isSpec: "True"
  fullName: AkiraNetwork.VirtualStorageLibrary.WildcardMatchers.PowerShellWildcardMatcher.Wildcards
  nameWithType: PowerShellWildcardMatcher.Wildcards
