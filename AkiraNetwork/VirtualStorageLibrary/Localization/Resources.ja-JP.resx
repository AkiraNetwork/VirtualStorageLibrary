<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NodeNotFound" xml:space="preserve">
    <value>ノードが見つかりません。 [{0}]</value>
  </data>
  <data name="RootAlreadyExists" xml:space="preserve">
    <value>ルートディレクトリは既に存在します。</value>
  </data>
  <data name="InvalidNodeName" xml:space="preserve">
    <value>ノード名 [{0}] は無効です。使用禁止の文字が使われています。</value>
  </data>
  <data name="NodeAlreadyExists" xml:space="preserve">
    <value>ノード [{0}] は既に存在します。上書きは許可されていません。</value>
  </data>
  <data name="NodeIsNotVirtualItem" xml:space="preserve">
    <value>指定されたノード [{0}] は VirtualItem&lt;{1}&gt; 型ではありません。</value>
  </data>
  <data name="NodeIsNotVirtualDirectory" xml:space="preserve">
    <value>指定されたノード [{0}] は VirtualDirectory 型ではありません。</value>
  </data>
  <data name="NodeIsNotVirtualSymbolicLink" xml:space="preserve">
    <value>指定されたノード [{0}] は VirtualSymbolicLink 型ではありません。</value>
  </data>
  <data name="PrefixIsEmpty" xml:space="preserve">
    <value>プレフィックスは空にできません。</value>
  </data>
  <data name="PathNormalizationAboveRoot" xml:space="preserve">
    <value>パスの正規化により、ルートディレクトリの上位になっています。 [{0}]</value>
  </data>
  <data name="ParameterIsNotVirtualPath" xml:space="preserve">
    <value>パラメータで指定されたオブジェクトはVirtualPath型ではありません。</value>
  </data>
  <data name="PathIsNotAbsolutePath" xml:space="preserve">
    <value>このパスは絶対パスではありません。 [{0}]</value>
  </data>
  <data name="BasePathIsNotAbsolute" xml:space="preserve">
    <value>指定されたベースパスが絶対パスではありません。 [{0}]</value>
  </data>
  <data name="ParameterIsNotVirtualNodeName" xml:space="preserve">
    <value>パラメータで指定されたオブジェクトはVirtualNodeName型ではありません。</value>
  </data>
  <data name="TargetPathIsNotAbsolutePath" xml:space="preserve">
    <value>パラメータで指定されたターゲットパスは絶対パスである必要があります。 [{0}]</value>
  </data>
  <data name="LinkPathIsNotAbsolutePath" xml:space="preserve">
    <value>パラメータで指定されたシンボリックリンクのパスは絶対パスである必要があります。 [{0}]</value>
  </data>
  <data name="ParameterIsNullOrEmpty" xml:space="preserve">
    <value>パラメータで指定された値がNULLまたは空です。 [{0}]</value>
  </data>
  <data name="ParameterIsEmpty" xml:space="preserve">
    <value>パラメータで指定された値が空です。 [{0}]</value>
  </data>
  <data name="CannotReachBecauseNodeItem" xml:space="preserve">
    <value>ノード [{0}] まで到達できません。ノード [{1}] はアイテムです。</value>
  </data>
  <data name="CannotReachBecauseNodeSymbolicLink" xml:space="preserve">
    <value>ノード [{0}] まで到達できません。ノード [{1}] はシンボリックリンクであり、followLinksパラメータはfalseが指定されています。</value>
  </data>
  <data name="CircularReferenceDetected" xml:space="preserve">
    <value>循環参照を検出しました。 [{0}] [{1}]</value>
  </data>
  <data name="PathCannotBeEmpty" xml:space="preserve">
    <value>パスに空文字は指定できません。</value>
  </data>
  <data name="RecursiveSubdirectoryConflict" xml:space="preserve">
    <value>recursiveパラメータがtrueに指定されている場合、コピー元またはコピー先に互いのサブディレクトリを指定することはできません。 [{0}] [{1}]</value>
  </data>
  <data name="PathNotFound" xml:space="preserve">
    <value>パスが見つかりません。 [{0}]</value>
  </data>
  <data name="SourceAndDestinationPathSameForCopy" xml:space="preserve">
    <value>コピー元のパスとコピー先のパスが同じです。 [{0}] [{1}]</value>
  </data>
  <data name="CannotAddRoot" xml:space="preserve">
    <value>ディレクトリにルートを追加する事は出来ません。</value>
  </data>
  <data name="CannotRemoveRoot" xml:space="preserve">
    <value>ルートディレクトリを削除することはできません。</value>
  </data>
  <data name="CannotRemoveNonEmptyDirectory" xml:space="preserve">
    <value>ディレクトリが空ではなく、再帰パラメータがfalseに設定されている為、削除できません。 [{0}]</value>
  </data>
  <data name="NewNameSameAsCurrent" xml:space="preserve">
    <value>新しい名前が現在の名前と同じです。 [{0}]</value>
  </data>
  <data name="NewNameNodeAlreadyExists" xml:space="preserve">
    <value>新しい名前のノードが既に存在する為、名前を変更できません。 [{0}]</value>
  </data>
  <data name="SourceAndDestinationPathSameForMove" xml:space="preserve">
    <value>移動元のパスと移動先のパスが同じです。 [{0}] [{1}]</value>
  </data>
  <data name="CannotMoveRootDirectory" xml:space="preserve">
    <value>ルートディレクトリを移動することはできません。</value>
  </data>
  <data name="DestinationIsSubdirectoryOfSource" xml:space="preserve">
    <value>移動先のパスが移動元のパスのサブディレクトリになっています。 [{0}] [{1}]</value>
  </data>
  <data name="DestinationNodeIsItemOrSymbolicLink" xml:space="preserve">
    <value>移動先のノードはアイテムまたはシンボリックリンクです。 [{0}]</value>
  </data>
  <data name="NodeWithSameNameAtDestination" xml:space="preserve">
    <value>移動先のパスに同名のノードが存在します。 [{0}] [{1}]</value>
  </data>
  <data name="CannotRemoveCurrentOrParentDirectory" xml:space="preserve">
    <value>現在、または、親のディレクトリを削除する事は出来ません。</value>
  </data>
  <data name="CannotMoveCurrentOrParentDirectory" xml:space="preserve">
    <value>移動元のパスが現在、または、親のディレクトリの場合、移動はできません。</value>
  </data>
  <data name="CannotChangeTargetPath" xml:space="preserve">
    <value>ストレージに関連付けられているリンクのターゲットパスは変更できません。 [{0}]</value>
  </data>
</root>